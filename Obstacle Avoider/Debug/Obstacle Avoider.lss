
Obstacle Avoider.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000528  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000564  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000998  00000000  00000000  000005d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000774  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000412  00000000  00000000  000016e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  00001af4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040b  00000000  00000000  00001bac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000195  00000000  00000000  00001fb7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000214c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ea       	ldi	r30, 0xA4	; 164
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ae 00 	call	0x15c	; 0x15c <main>
  9e:	0c 94 50 02 	jmp	0x4a0	; 0x4a0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <motor_PWM>:
#include "Motor_Types.h"


				// ----- Motor PWM Function ----- //
void motor_PWM(u08 duty_cycle)
{
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	1f 92       	push	r1
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
  b0:	89 83       	std	Y+1, r24	; 0x01

// *** In Inverting Mode ... The Less the Duty Cycle ==> More the speed.
// -------------------- Configuration -------------------- //
	TCCR0A |= _TIMR_MODE_FASTPWM;
  b2:	84 b5       	in	r24, 0x24	; 36
  b4:	83 60       	ori	r24, 0x03	; 3
  b6:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= _TIMR_OC0A_NONINVERTING_FASTPWM;
  b8:	84 b5       	in	r24, 0x24	; 36
  ba:	80 68       	ori	r24, 0x80	; 128
  bc:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= _TIMR_OC0B_NONINVERTING_FASTPWM;
  be:	84 b5       	in	r24, 0x24	; 36
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= _TIMR_CS_PRSC1024;
  c4:	85 b5       	in	r24, 0x25	; 37
  c6:	85 60       	ori	r24, 0x05	; 5
  c8:	85 bd       	out	0x25, r24	; 37

	// Port Direction
	DDRD |= (1<<5) | (1<<6) | (1<<0) | (1<<1);
  ca:	8a b1       	in	r24, 0x0a	; 10
  cc:	83 66       	ori	r24, 0x63	; 99
  ce:	8a b9       	out	0x0a, r24	; 10
	
	// Duty_Cycle = (val/255)*100.0
	// OCR0A = (duty_cycle*255)/100.0;
	// OCR0B = (duty_cycle*255)/100.0;
	
	OCR0A = ((duty_cycle*256)/100.0 - 1) +3; //left
  d0:	69 81       	ldd	r22, Y+1	; 0x01
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	76 2f       	mov	r23, r22
  d6:	66 27       	eor	r22, r22
  d8:	07 2e       	mov	r0, r23
  da:	00 0c       	add	r0, r0
  dc:	88 0b       	sbc	r24, r24
  de:	99 0b       	sbc	r25, r25
  e0:	0e 94 c4 01 	call	0x388	; 0x388 <__floatsisf>
  e4:	20 e0       	ldi	r18, 0x00	; 0
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	48 ec       	ldi	r20, 0xC8	; 200
  ea:	52 e4       	ldi	r21, 0x42	; 66
  ec:	0e 94 21 01 	call	0x242	; 0x242 <__divsf3>
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	40 e8       	ldi	r20, 0x80	; 128
  f6:	5f e3       	ldi	r21, 0x3F	; 63
  f8:	0e 94 b4 00 	call	0x168	; 0x168 <__subsf3>
  fc:	20 e0       	ldi	r18, 0x00	; 0
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	40 e4       	ldi	r20, 0x40	; 64
 102:	50 e4       	ldi	r21, 0x40	; 64
 104:	0e 94 b5 00 	call	0x16a	; 0x16a <__addsf3>
 108:	0e 94 93 01 	call	0x326	; 0x326 <__fixunssfsi>
 10c:	67 bd       	out	0x27, r22	; 39
	OCR0B = ((duty_cycle*256)/100.0 - 1); //right
 10e:	69 81       	ldd	r22, Y+1	; 0x01
 110:	70 e0       	ldi	r23, 0x00	; 0
 112:	76 2f       	mov	r23, r22
 114:	66 27       	eor	r22, r22
 116:	07 2e       	mov	r0, r23
 118:	00 0c       	add	r0, r0
 11a:	88 0b       	sbc	r24, r24
 11c:	99 0b       	sbc	r25, r25
 11e:	0e 94 c4 01 	call	0x388	; 0x388 <__floatsisf>
 122:	20 e0       	ldi	r18, 0x00	; 0
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	48 ec       	ldi	r20, 0xC8	; 200
 128:	52 e4       	ldi	r21, 0x42	; 66
 12a:	0e 94 21 01 	call	0x242	; 0x242 <__divsf3>
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	40 e8       	ldi	r20, 0x80	; 128
 134:	5f e3       	ldi	r21, 0x3F	; 63
 136:	0e 94 b4 00 	call	0x168	; 0x168 <__subsf3>
 13a:	0e 94 93 01 	call	0x326	; 0x326 <__fixunssfsi>
 13e:	68 bd       	out	0x28, r22	; 40
/************************************************************************/
}
 140:	0f 90       	pop	r0
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	08 95       	ret

00000148 <Forward>:

				// ----- Motor Forward Movement ----- //
void Forward(){
	motor_PWM(18);
 148:	82 e1       	ldi	r24, 0x12	; 18
 14a:	0e 94 53 00 	call	0xa6	; 0xa6 <motor_PWM>
	PORTD |= (1 << _MOTOR_DIRECTION_IN1) | (1 << _MOTOR_DIRECTION_IN3);
 14e:	8b b1       	in	r24, 0x0b	; 11
 150:	85 60       	ori	r24, 0x05	; 5
 152:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~((1 << _MOTOR_DIRECTION_IN2) | (1 << _MOTOR_DIRECTION_IN4));
 154:	8b b1       	in	r24, 0x0b	; 11
 156:	85 7f       	andi	r24, 0xF5	; 245
 158:	8b b9       	out	0x0b, r24	; 11
 15a:	08 95       	ret

0000015c <main>:
// 	PORTB |= 1 << 5;
// 	test2();			// infinite loop anyway
// 	_delay_ms(1000);
	while(1)
	{	
		motor_PWM(20);
 15c:	84 e1       	ldi	r24, 0x14	; 20
 15e:	0e 94 53 00 	call	0xa6	; 0xa6 <motor_PWM>
		Forward();
 162:	0e 94 a4 00 	call	0x148	; 0x148 <Forward>
 166:	fa cf       	rjmp	.-12     	; 0x15c <main>

00000168 <__subsf3>:
 168:	50 58       	subi	r21, 0x80	; 128

0000016a <__addsf3>:
 16a:	bb 27       	eor	r27, r27
 16c:	aa 27       	eor	r26, r26
 16e:	0e 94 cc 00 	call	0x198	; 0x198 <__addsf3x>
 172:	0c 94 16 02 	jmp	0x42c	; 0x42c <__fp_round>
 176:	0e 94 08 02 	call	0x410	; 0x410 <__fp_pscA>
 17a:	38 f0       	brcs	.+14     	; 0x18a <__addsf3+0x20>
 17c:	0e 94 0f 02 	call	0x41e	; 0x41e <__fp_pscB>
 180:	20 f0       	brcs	.+8      	; 0x18a <__addsf3+0x20>
 182:	39 f4       	brne	.+14     	; 0x192 <__addsf3+0x28>
 184:	9f 3f       	cpi	r25, 0xFF	; 255
 186:	19 f4       	brne	.+6      	; 0x18e <__addsf3+0x24>
 188:	26 f4       	brtc	.+8      	; 0x192 <__addsf3+0x28>
 18a:	0c 94 05 02 	jmp	0x40a	; 0x40a <__fp_nan>
 18e:	0e f4       	brtc	.+2      	; 0x192 <__addsf3+0x28>
 190:	e0 95       	com	r30
 192:	e7 fb       	bst	r30, 7
 194:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__fp_inf>

00000198 <__addsf3x>:
 198:	e9 2f       	mov	r30, r25
 19a:	0e 94 27 02 	call	0x44e	; 0x44e <__fp_split3>
 19e:	58 f3       	brcs	.-42     	; 0x176 <__addsf3+0xc>
 1a0:	ba 17       	cp	r27, r26
 1a2:	62 07       	cpc	r22, r18
 1a4:	73 07       	cpc	r23, r19
 1a6:	84 07       	cpc	r24, r20
 1a8:	95 07       	cpc	r25, r21
 1aa:	20 f0       	brcs	.+8      	; 0x1b4 <__addsf3x+0x1c>
 1ac:	79 f4       	brne	.+30     	; 0x1cc <__addsf3x+0x34>
 1ae:	a6 f5       	brtc	.+104    	; 0x218 <__addsf3x+0x80>
 1b0:	0c 94 49 02 	jmp	0x492	; 0x492 <__fp_zero>
 1b4:	0e f4       	brtc	.+2      	; 0x1b8 <__addsf3x+0x20>
 1b6:	e0 95       	com	r30
 1b8:	0b 2e       	mov	r0, r27
 1ba:	ba 2f       	mov	r27, r26
 1bc:	a0 2d       	mov	r26, r0
 1be:	0b 01       	movw	r0, r22
 1c0:	b9 01       	movw	r22, r18
 1c2:	90 01       	movw	r18, r0
 1c4:	0c 01       	movw	r0, r24
 1c6:	ca 01       	movw	r24, r20
 1c8:	a0 01       	movw	r20, r0
 1ca:	11 24       	eor	r1, r1
 1cc:	ff 27       	eor	r31, r31
 1ce:	59 1b       	sub	r21, r25
 1d0:	99 f0       	breq	.+38     	; 0x1f8 <__addsf3x+0x60>
 1d2:	59 3f       	cpi	r21, 0xF9	; 249
 1d4:	50 f4       	brcc	.+20     	; 0x1ea <__addsf3x+0x52>
 1d6:	50 3e       	cpi	r21, 0xE0	; 224
 1d8:	68 f1       	brcs	.+90     	; 0x234 <__addsf3x+0x9c>
 1da:	1a 16       	cp	r1, r26
 1dc:	f0 40       	sbci	r31, 0x00	; 0
 1de:	a2 2f       	mov	r26, r18
 1e0:	23 2f       	mov	r18, r19
 1e2:	34 2f       	mov	r19, r20
 1e4:	44 27       	eor	r20, r20
 1e6:	58 5f       	subi	r21, 0xF8	; 248
 1e8:	f3 cf       	rjmp	.-26     	; 0x1d0 <__addsf3x+0x38>
 1ea:	46 95       	lsr	r20
 1ec:	37 95       	ror	r19
 1ee:	27 95       	ror	r18
 1f0:	a7 95       	ror	r26
 1f2:	f0 40       	sbci	r31, 0x00	; 0
 1f4:	53 95       	inc	r21
 1f6:	c9 f7       	brne	.-14     	; 0x1ea <__addsf3x+0x52>
 1f8:	7e f4       	brtc	.+30     	; 0x218 <__addsf3x+0x80>
 1fa:	1f 16       	cp	r1, r31
 1fc:	ba 0b       	sbc	r27, r26
 1fe:	62 0b       	sbc	r22, r18
 200:	73 0b       	sbc	r23, r19
 202:	84 0b       	sbc	r24, r20
 204:	ba f0       	brmi	.+46     	; 0x234 <__addsf3x+0x9c>
 206:	91 50       	subi	r25, 0x01	; 1
 208:	a1 f0       	breq	.+40     	; 0x232 <__addsf3x+0x9a>
 20a:	ff 0f       	add	r31, r31
 20c:	bb 1f       	adc	r27, r27
 20e:	66 1f       	adc	r22, r22
 210:	77 1f       	adc	r23, r23
 212:	88 1f       	adc	r24, r24
 214:	c2 f7       	brpl	.-16     	; 0x206 <__addsf3x+0x6e>
 216:	0e c0       	rjmp	.+28     	; 0x234 <__addsf3x+0x9c>
 218:	ba 0f       	add	r27, r26
 21a:	62 1f       	adc	r22, r18
 21c:	73 1f       	adc	r23, r19
 21e:	84 1f       	adc	r24, r20
 220:	48 f4       	brcc	.+18     	; 0x234 <__addsf3x+0x9c>
 222:	87 95       	ror	r24
 224:	77 95       	ror	r23
 226:	67 95       	ror	r22
 228:	b7 95       	ror	r27
 22a:	f7 95       	ror	r31
 22c:	9e 3f       	cpi	r25, 0xFE	; 254
 22e:	08 f0       	brcs	.+2      	; 0x232 <__addsf3x+0x9a>
 230:	b0 cf       	rjmp	.-160    	; 0x192 <__addsf3+0x28>
 232:	93 95       	inc	r25
 234:	88 0f       	add	r24, r24
 236:	08 f0       	brcs	.+2      	; 0x23a <__addsf3x+0xa2>
 238:	99 27       	eor	r25, r25
 23a:	ee 0f       	add	r30, r30
 23c:	97 95       	ror	r25
 23e:	87 95       	ror	r24
 240:	08 95       	ret

00000242 <__divsf3>:
 242:	0e 94 35 01 	call	0x26a	; 0x26a <__divsf3x>
 246:	0c 94 16 02 	jmp	0x42c	; 0x42c <__fp_round>
 24a:	0e 94 0f 02 	call	0x41e	; 0x41e <__fp_pscB>
 24e:	58 f0       	brcs	.+22     	; 0x266 <__divsf3+0x24>
 250:	0e 94 08 02 	call	0x410	; 0x410 <__fp_pscA>
 254:	40 f0       	brcs	.+16     	; 0x266 <__divsf3+0x24>
 256:	29 f4       	brne	.+10     	; 0x262 <__divsf3+0x20>
 258:	5f 3f       	cpi	r21, 0xFF	; 255
 25a:	29 f0       	breq	.+10     	; 0x266 <__divsf3+0x24>
 25c:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__fp_inf>
 260:	51 11       	cpse	r21, r1
 262:	0c 94 4a 02 	jmp	0x494	; 0x494 <__fp_szero>
 266:	0c 94 05 02 	jmp	0x40a	; 0x40a <__fp_nan>

0000026a <__divsf3x>:
 26a:	0e 94 27 02 	call	0x44e	; 0x44e <__fp_split3>
 26e:	68 f3       	brcs	.-38     	; 0x24a <__divsf3+0x8>

00000270 <__divsf3_pse>:
 270:	99 23       	and	r25, r25
 272:	b1 f3       	breq	.-20     	; 0x260 <__divsf3+0x1e>
 274:	55 23       	and	r21, r21
 276:	91 f3       	breq	.-28     	; 0x25c <__divsf3+0x1a>
 278:	95 1b       	sub	r25, r21
 27a:	55 0b       	sbc	r21, r21
 27c:	bb 27       	eor	r27, r27
 27e:	aa 27       	eor	r26, r26
 280:	62 17       	cp	r22, r18
 282:	73 07       	cpc	r23, r19
 284:	84 07       	cpc	r24, r20
 286:	38 f0       	brcs	.+14     	; 0x296 <__divsf3_pse+0x26>
 288:	9f 5f       	subi	r25, 0xFF	; 255
 28a:	5f 4f       	sbci	r21, 0xFF	; 255
 28c:	22 0f       	add	r18, r18
 28e:	33 1f       	adc	r19, r19
 290:	44 1f       	adc	r20, r20
 292:	aa 1f       	adc	r26, r26
 294:	a9 f3       	breq	.-22     	; 0x280 <__divsf3_pse+0x10>
 296:	35 d0       	rcall	.+106    	; 0x302 <__divsf3_pse+0x92>
 298:	0e 2e       	mov	r0, r30
 29a:	3a f0       	brmi	.+14     	; 0x2aa <__divsf3_pse+0x3a>
 29c:	e0 e8       	ldi	r30, 0x80	; 128
 29e:	32 d0       	rcall	.+100    	; 0x304 <__divsf3_pse+0x94>
 2a0:	91 50       	subi	r25, 0x01	; 1
 2a2:	50 40       	sbci	r21, 0x00	; 0
 2a4:	e6 95       	lsr	r30
 2a6:	00 1c       	adc	r0, r0
 2a8:	ca f7       	brpl	.-14     	; 0x29c <__divsf3_pse+0x2c>
 2aa:	2b d0       	rcall	.+86     	; 0x302 <__divsf3_pse+0x92>
 2ac:	fe 2f       	mov	r31, r30
 2ae:	29 d0       	rcall	.+82     	; 0x302 <__divsf3_pse+0x92>
 2b0:	66 0f       	add	r22, r22
 2b2:	77 1f       	adc	r23, r23
 2b4:	88 1f       	adc	r24, r24
 2b6:	bb 1f       	adc	r27, r27
 2b8:	26 17       	cp	r18, r22
 2ba:	37 07       	cpc	r19, r23
 2bc:	48 07       	cpc	r20, r24
 2be:	ab 07       	cpc	r26, r27
 2c0:	b0 e8       	ldi	r27, 0x80	; 128
 2c2:	09 f0       	breq	.+2      	; 0x2c6 <__divsf3_pse+0x56>
 2c4:	bb 0b       	sbc	r27, r27
 2c6:	80 2d       	mov	r24, r0
 2c8:	bf 01       	movw	r22, r30
 2ca:	ff 27       	eor	r31, r31
 2cc:	93 58       	subi	r25, 0x83	; 131
 2ce:	5f 4f       	sbci	r21, 0xFF	; 255
 2d0:	3a f0       	brmi	.+14     	; 0x2e0 <__divsf3_pse+0x70>
 2d2:	9e 3f       	cpi	r25, 0xFE	; 254
 2d4:	51 05       	cpc	r21, r1
 2d6:	78 f0       	brcs	.+30     	; 0x2f6 <__divsf3_pse+0x86>
 2d8:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__fp_inf>
 2dc:	0c 94 4a 02 	jmp	0x494	; 0x494 <__fp_szero>
 2e0:	5f 3f       	cpi	r21, 0xFF	; 255
 2e2:	e4 f3       	brlt	.-8      	; 0x2dc <__divsf3_pse+0x6c>
 2e4:	98 3e       	cpi	r25, 0xE8	; 232
 2e6:	d4 f3       	brlt	.-12     	; 0x2dc <__divsf3_pse+0x6c>
 2e8:	86 95       	lsr	r24
 2ea:	77 95       	ror	r23
 2ec:	67 95       	ror	r22
 2ee:	b7 95       	ror	r27
 2f0:	f7 95       	ror	r31
 2f2:	9f 5f       	subi	r25, 0xFF	; 255
 2f4:	c9 f7       	brne	.-14     	; 0x2e8 <__divsf3_pse+0x78>
 2f6:	88 0f       	add	r24, r24
 2f8:	91 1d       	adc	r25, r1
 2fa:	96 95       	lsr	r25
 2fc:	87 95       	ror	r24
 2fe:	97 f9       	bld	r25, 7
 300:	08 95       	ret
 302:	e1 e0       	ldi	r30, 0x01	; 1
 304:	66 0f       	add	r22, r22
 306:	77 1f       	adc	r23, r23
 308:	88 1f       	adc	r24, r24
 30a:	bb 1f       	adc	r27, r27
 30c:	62 17       	cp	r22, r18
 30e:	73 07       	cpc	r23, r19
 310:	84 07       	cpc	r24, r20
 312:	ba 07       	cpc	r27, r26
 314:	20 f0       	brcs	.+8      	; 0x31e <__divsf3_pse+0xae>
 316:	62 1b       	sub	r22, r18
 318:	73 0b       	sbc	r23, r19
 31a:	84 0b       	sbc	r24, r20
 31c:	ba 0b       	sbc	r27, r26
 31e:	ee 1f       	adc	r30, r30
 320:	88 f7       	brcc	.-30     	; 0x304 <__divsf3_pse+0x94>
 322:	e0 95       	com	r30
 324:	08 95       	ret

00000326 <__fixunssfsi>:
 326:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_splitA>
 32a:	88 f0       	brcs	.+34     	; 0x34e <__fixunssfsi+0x28>
 32c:	9f 57       	subi	r25, 0x7F	; 127
 32e:	98 f0       	brcs	.+38     	; 0x356 <__fixunssfsi+0x30>
 330:	b9 2f       	mov	r27, r25
 332:	99 27       	eor	r25, r25
 334:	b7 51       	subi	r27, 0x17	; 23
 336:	b0 f0       	brcs	.+44     	; 0x364 <__fixunssfsi+0x3e>
 338:	e1 f0       	breq	.+56     	; 0x372 <__fixunssfsi+0x4c>
 33a:	66 0f       	add	r22, r22
 33c:	77 1f       	adc	r23, r23
 33e:	88 1f       	adc	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	1a f0       	brmi	.+6      	; 0x34a <__fixunssfsi+0x24>
 344:	ba 95       	dec	r27
 346:	c9 f7       	brne	.-14     	; 0x33a <__fixunssfsi+0x14>
 348:	14 c0       	rjmp	.+40     	; 0x372 <__fixunssfsi+0x4c>
 34a:	b1 30       	cpi	r27, 0x01	; 1
 34c:	91 f0       	breq	.+36     	; 0x372 <__fixunssfsi+0x4c>
 34e:	0e 94 49 02 	call	0x492	; 0x492 <__fp_zero>
 352:	b1 e0       	ldi	r27, 0x01	; 1
 354:	08 95       	ret
 356:	0c 94 49 02 	jmp	0x492	; 0x492 <__fp_zero>
 35a:	67 2f       	mov	r22, r23
 35c:	78 2f       	mov	r23, r24
 35e:	88 27       	eor	r24, r24
 360:	b8 5f       	subi	r27, 0xF8	; 248
 362:	39 f0       	breq	.+14     	; 0x372 <__fixunssfsi+0x4c>
 364:	b9 3f       	cpi	r27, 0xF9	; 249
 366:	cc f3       	brlt	.-14     	; 0x35a <__fixunssfsi+0x34>
 368:	86 95       	lsr	r24
 36a:	77 95       	ror	r23
 36c:	67 95       	ror	r22
 36e:	b3 95       	inc	r27
 370:	d9 f7       	brne	.-10     	; 0x368 <__fixunssfsi+0x42>
 372:	3e f4       	brtc	.+14     	; 0x382 <__fixunssfsi+0x5c>
 374:	90 95       	com	r25
 376:	80 95       	com	r24
 378:	70 95       	com	r23
 37a:	61 95       	neg	r22
 37c:	7f 4f       	sbci	r23, 0xFF	; 255
 37e:	8f 4f       	sbci	r24, 0xFF	; 255
 380:	9f 4f       	sbci	r25, 0xFF	; 255
 382:	08 95       	ret

00000384 <__floatunsisf>:
 384:	e8 94       	clt
 386:	09 c0       	rjmp	.+18     	; 0x39a <__floatsisf+0x12>

00000388 <__floatsisf>:
 388:	97 fb       	bst	r25, 7
 38a:	3e f4       	brtc	.+14     	; 0x39a <__floatsisf+0x12>
 38c:	90 95       	com	r25
 38e:	80 95       	com	r24
 390:	70 95       	com	r23
 392:	61 95       	neg	r22
 394:	7f 4f       	sbci	r23, 0xFF	; 255
 396:	8f 4f       	sbci	r24, 0xFF	; 255
 398:	9f 4f       	sbci	r25, 0xFF	; 255
 39a:	99 23       	and	r25, r25
 39c:	a9 f0       	breq	.+42     	; 0x3c8 <__floatsisf+0x40>
 39e:	f9 2f       	mov	r31, r25
 3a0:	96 e9       	ldi	r25, 0x96	; 150
 3a2:	bb 27       	eor	r27, r27
 3a4:	93 95       	inc	r25
 3a6:	f6 95       	lsr	r31
 3a8:	87 95       	ror	r24
 3aa:	77 95       	ror	r23
 3ac:	67 95       	ror	r22
 3ae:	b7 95       	ror	r27
 3b0:	f1 11       	cpse	r31, r1
 3b2:	f8 cf       	rjmp	.-16     	; 0x3a4 <__floatsisf+0x1c>
 3b4:	fa f4       	brpl	.+62     	; 0x3f4 <__floatsisf+0x6c>
 3b6:	bb 0f       	add	r27, r27
 3b8:	11 f4       	brne	.+4      	; 0x3be <__floatsisf+0x36>
 3ba:	60 ff       	sbrs	r22, 0
 3bc:	1b c0       	rjmp	.+54     	; 0x3f4 <__floatsisf+0x6c>
 3be:	6f 5f       	subi	r22, 0xFF	; 255
 3c0:	7f 4f       	sbci	r23, 0xFF	; 255
 3c2:	8f 4f       	sbci	r24, 0xFF	; 255
 3c4:	9f 4f       	sbci	r25, 0xFF	; 255
 3c6:	16 c0       	rjmp	.+44     	; 0x3f4 <__floatsisf+0x6c>
 3c8:	88 23       	and	r24, r24
 3ca:	11 f0       	breq	.+4      	; 0x3d0 <__floatsisf+0x48>
 3cc:	96 e9       	ldi	r25, 0x96	; 150
 3ce:	11 c0       	rjmp	.+34     	; 0x3f2 <__floatsisf+0x6a>
 3d0:	77 23       	and	r23, r23
 3d2:	21 f0       	breq	.+8      	; 0x3dc <__floatsisf+0x54>
 3d4:	9e e8       	ldi	r25, 0x8E	; 142
 3d6:	87 2f       	mov	r24, r23
 3d8:	76 2f       	mov	r23, r22
 3da:	05 c0       	rjmp	.+10     	; 0x3e6 <__floatsisf+0x5e>
 3dc:	66 23       	and	r22, r22
 3de:	71 f0       	breq	.+28     	; 0x3fc <__floatsisf+0x74>
 3e0:	96 e8       	ldi	r25, 0x86	; 134
 3e2:	86 2f       	mov	r24, r22
 3e4:	70 e0       	ldi	r23, 0x00	; 0
 3e6:	60 e0       	ldi	r22, 0x00	; 0
 3e8:	2a f0       	brmi	.+10     	; 0x3f4 <__floatsisf+0x6c>
 3ea:	9a 95       	dec	r25
 3ec:	66 0f       	add	r22, r22
 3ee:	77 1f       	adc	r23, r23
 3f0:	88 1f       	adc	r24, r24
 3f2:	da f7       	brpl	.-10     	; 0x3ea <__floatsisf+0x62>
 3f4:	88 0f       	add	r24, r24
 3f6:	96 95       	lsr	r25
 3f8:	87 95       	ror	r24
 3fa:	97 f9       	bld	r25, 7
 3fc:	08 95       	ret

000003fe <__fp_inf>:
 3fe:	97 f9       	bld	r25, 7
 400:	9f 67       	ori	r25, 0x7F	; 127
 402:	80 e8       	ldi	r24, 0x80	; 128
 404:	70 e0       	ldi	r23, 0x00	; 0
 406:	60 e0       	ldi	r22, 0x00	; 0
 408:	08 95       	ret

0000040a <__fp_nan>:
 40a:	9f ef       	ldi	r25, 0xFF	; 255
 40c:	80 ec       	ldi	r24, 0xC0	; 192
 40e:	08 95       	ret

00000410 <__fp_pscA>:
 410:	00 24       	eor	r0, r0
 412:	0a 94       	dec	r0
 414:	16 16       	cp	r1, r22
 416:	17 06       	cpc	r1, r23
 418:	18 06       	cpc	r1, r24
 41a:	09 06       	cpc	r0, r25
 41c:	08 95       	ret

0000041e <__fp_pscB>:
 41e:	00 24       	eor	r0, r0
 420:	0a 94       	dec	r0
 422:	12 16       	cp	r1, r18
 424:	13 06       	cpc	r1, r19
 426:	14 06       	cpc	r1, r20
 428:	05 06       	cpc	r0, r21
 42a:	08 95       	ret

0000042c <__fp_round>:
 42c:	09 2e       	mov	r0, r25
 42e:	03 94       	inc	r0
 430:	00 0c       	add	r0, r0
 432:	11 f4       	brne	.+4      	; 0x438 <__fp_round+0xc>
 434:	88 23       	and	r24, r24
 436:	52 f0       	brmi	.+20     	; 0x44c <__fp_round+0x20>
 438:	bb 0f       	add	r27, r27
 43a:	40 f4       	brcc	.+16     	; 0x44c <__fp_round+0x20>
 43c:	bf 2b       	or	r27, r31
 43e:	11 f4       	brne	.+4      	; 0x444 <__fp_round+0x18>
 440:	60 ff       	sbrs	r22, 0
 442:	04 c0       	rjmp	.+8      	; 0x44c <__fp_round+0x20>
 444:	6f 5f       	subi	r22, 0xFF	; 255
 446:	7f 4f       	sbci	r23, 0xFF	; 255
 448:	8f 4f       	sbci	r24, 0xFF	; 255
 44a:	9f 4f       	sbci	r25, 0xFF	; 255
 44c:	08 95       	ret

0000044e <__fp_split3>:
 44e:	57 fd       	sbrc	r21, 7
 450:	90 58       	subi	r25, 0x80	; 128
 452:	44 0f       	add	r20, r20
 454:	55 1f       	adc	r21, r21
 456:	59 f0       	breq	.+22     	; 0x46e <__fp_splitA+0x10>
 458:	5f 3f       	cpi	r21, 0xFF	; 255
 45a:	71 f0       	breq	.+28     	; 0x478 <__fp_splitA+0x1a>
 45c:	47 95       	ror	r20

0000045e <__fp_splitA>:
 45e:	88 0f       	add	r24, r24
 460:	97 fb       	bst	r25, 7
 462:	99 1f       	adc	r25, r25
 464:	61 f0       	breq	.+24     	; 0x47e <__fp_splitA+0x20>
 466:	9f 3f       	cpi	r25, 0xFF	; 255
 468:	79 f0       	breq	.+30     	; 0x488 <__fp_splitA+0x2a>
 46a:	87 95       	ror	r24
 46c:	08 95       	ret
 46e:	12 16       	cp	r1, r18
 470:	13 06       	cpc	r1, r19
 472:	14 06       	cpc	r1, r20
 474:	55 1f       	adc	r21, r21
 476:	f2 cf       	rjmp	.-28     	; 0x45c <__fp_split3+0xe>
 478:	46 95       	lsr	r20
 47a:	f1 df       	rcall	.-30     	; 0x45e <__fp_splitA>
 47c:	08 c0       	rjmp	.+16     	; 0x48e <__fp_splitA+0x30>
 47e:	16 16       	cp	r1, r22
 480:	17 06       	cpc	r1, r23
 482:	18 06       	cpc	r1, r24
 484:	99 1f       	adc	r25, r25
 486:	f1 cf       	rjmp	.-30     	; 0x46a <__fp_splitA+0xc>
 488:	86 95       	lsr	r24
 48a:	71 05       	cpc	r23, r1
 48c:	61 05       	cpc	r22, r1
 48e:	08 94       	sec
 490:	08 95       	ret

00000492 <__fp_zero>:
 492:	e8 94       	clt

00000494 <__fp_szero>:
 494:	bb 27       	eor	r27, r27
 496:	66 27       	eor	r22, r22
 498:	77 27       	eor	r23, r23
 49a:	cb 01       	movw	r24, r22
 49c:	97 f9       	bld	r25, 7
 49e:	08 95       	ret

000004a0 <_exit>:
 4a0:	f8 94       	cli

000004a2 <__stop_program>:
 4a2:	ff cf       	rjmp	.-2      	; 0x4a2 <__stop_program>
