
Obstacle Avoider.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000092  00800100  000010c2  00001156  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000096  00800192  00800192  000011e8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011e8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001218  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001254  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013b5  00000000  00000000  0000134c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b50  00000000  00000000  00002701  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d14  00000000  00000000  00003251  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f8  00000000  00000000  00003f68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055a  00000000  00000000  00004260  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b0d  00000000  00000000  000047ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000052c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 ec       	ldi	r30, 0xC2	; 194
      7c:	f0 e1       	ldi	r31, 0x10	; 16
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a2 39       	cpi	r26, 0x92	; 146
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a2 e9       	ldi	r26, 0x92	; 146
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a8 32       	cpi	r26, 0x28	; 40
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 b9 04 	call	0x972	; 0x972 <main>
      9e:	0c 94 5f 08 	jmp	0x10be	; 0x10be <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <motor_PWM>:
}
				// ----- Motor Backward Movement ----- //
void Backward()
{
	PORTD &= ~((1 << _MOTOR_DIRECTION_IN1) | (1 << _MOTOR_DIRECTION_IN3));
	PORTD |= (1 << _MOTOR_DIRECTION_IN2) | (1 << _MOTOR_DIRECTION_IN4);
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	1f 92       	push	r1
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	89 83       	std	Y+1, r24	; 0x01
      b2:	84 b5       	in	r24, 0x24	; 36
      b4:	83 60       	ori	r24, 0x03	; 3
      b6:	84 bd       	out	0x24, r24	; 36
      b8:	84 b5       	in	r24, 0x24	; 36
      ba:	80 68       	ori	r24, 0x80	; 128
      bc:	84 bd       	out	0x24, r24	; 36
      be:	84 b5       	in	r24, 0x24	; 36
      c0:	80 62       	ori	r24, 0x20	; 32
      c2:	84 bd       	out	0x24, r24	; 36
      c4:	85 b5       	in	r24, 0x25	; 37
      c6:	85 60       	ori	r24, 0x05	; 5
      c8:	85 bd       	out	0x25, r24	; 37
      ca:	8a b1       	in	r24, 0x0a	; 10
      cc:	83 66       	ori	r24, 0x63	; 99
      ce:	8a b9       	out	0x0a, r24	; 10
      d0:	69 81       	ldd	r22, Y+1	; 0x01
      d2:	70 e0       	ldi	r23, 0x00	; 0
      d4:	76 2f       	mov	r23, r22
      d6:	66 27       	eor	r22, r22
      d8:	07 2e       	mov	r0, r23
      da:	00 0c       	add	r0, r0
      dc:	88 0b       	sbc	r24, r24
      de:	99 0b       	sbc	r25, r25
      e0:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatsisf>
      e4:	20 e0       	ldi	r18, 0x00	; 0
      e6:	30 e0       	ldi	r19, 0x00	; 0
      e8:	48 ec       	ldi	r20, 0xC8	; 200
      ea:	52 e4       	ldi	r21, 0x42	; 66
      ec:	0e 94 41 05 	call	0xa82	; 0xa82 <__divsf3>
      f0:	20 e0       	ldi	r18, 0x00	; 0
      f2:	30 e0       	ldi	r19, 0x00	; 0
      f4:	40 e8       	ldi	r20, 0x80	; 128
      f6:	5f e3       	ldi	r21, 0x3F	; 63
      f8:	0e 94 cf 04 	call	0x99e	; 0x99e <__subsf3>
      fc:	20 e0       	ldi	r18, 0x00	; 0
      fe:	30 e0       	ldi	r19, 0x00	; 0
     100:	40 e4       	ldi	r20, 0x40	; 64
     102:	50 e4       	ldi	r21, 0x40	; 64
     104:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__addsf3>
     108:	0e 94 ba 05 	call	0xb74	; 0xb74 <__fixunssfsi>
     10c:	67 bd       	out	0x27, r22	; 39
     10e:	69 81       	ldd	r22, Y+1	; 0x01
     110:	70 e0       	ldi	r23, 0x00	; 0
     112:	76 2f       	mov	r23, r22
     114:	66 27       	eor	r22, r22
     116:	07 2e       	mov	r0, r23
     118:	00 0c       	add	r0, r0
     11a:	88 0b       	sbc	r24, r24
     11c:	99 0b       	sbc	r25, r25
     11e:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatsisf>
     122:	20 e0       	ldi	r18, 0x00	; 0
     124:	30 e0       	ldi	r19, 0x00	; 0
     126:	48 ec       	ldi	r20, 0xC8	; 200
     128:	52 e4       	ldi	r21, 0x42	; 66
     12a:	0e 94 41 05 	call	0xa82	; 0xa82 <__divsf3>
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	40 e8       	ldi	r20, 0x80	; 128
     134:	5f e3       	ldi	r21, 0x3F	; 63
     136:	0e 94 cf 04 	call	0x99e	; 0x99e <__subsf3>
     13a:	0e 94 ba 05 	call	0xb74	; 0xb74 <__fixunssfsi>
     13e:	68 bd       	out	0x28, r22	; 40
     140:	0f 90       	pop	r0
     142:	df 91       	pop	r29
     144:	cf 91       	pop	r28
     146:	08 95       	ret

00000148 <Forward>:
     148:	82 e1       	ldi	r24, 0x12	; 18
     14a:	0e 94 53 00 	call	0xa6	; 0xa6 <motor_PWM>
     14e:	8b b1       	in	r24, 0x0b	; 11
     150:	85 60       	ori	r24, 0x05	; 5
     152:	8b b9       	out	0x0b, r24	; 11
     154:	8b b1       	in	r24, 0x0b	; 11
     156:	85 7f       	andi	r24, 0xF5	; 245
     158:	8b b9       	out	0x0b, r24	; 11
     15a:	08 95       	ret

0000015c <Stop>:
	Stop();
}
				// ----- Motor Stop Movement ----- //
void Stop()
{
	PORTD &= ~((1 << _MOTOR_DIRECTION_IN2) | (1 << _MOTOR_DIRECTION_IN3));
     15c:	8b b1       	in	r24, 0x0b	; 11
     15e:	89 7f       	andi	r24, 0xF9	; 249
     160:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~((1 << _MOTOR_DIRECTION_IN1) | (1 << _MOTOR_DIRECTION_IN4));
     162:	8b b1       	in	r24, 0x0b	; 11
     164:	86 7f       	andi	r24, 0xF6	; 246
     166:	8b b9       	out	0x0b, r24	; 11
     168:	08 95       	ret

0000016a <Right>:
	
}
				// ----- Motor Right Movement ----- //
void Right()
{	
	motor_PWM(15);
     16a:	8f e0       	ldi	r24, 0x0F	; 15
     16c:	0e 94 53 00 	call	0xa6	; 0xa6 <motor_PWM>
	PORTD |= (1 << _MOTOR_DIRECTION_IN1) | (1 << _MOTOR_DIRECTION_IN4);
     170:	8b b1       	in	r24, 0x0b	; 11
     172:	89 60       	ori	r24, 0x09	; 9
     174:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~((1 << _MOTOR_DIRECTION_IN2) | (1 << _MOTOR_DIRECTION_IN3));
     176:	8b b1       	in	r24, 0x0b	; 11
     178:	89 7f       	andi	r24, 0xF9	; 249
     17a:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     17c:	2f ef       	ldi	r18, 0xFF	; 255
     17e:	84 e3       	ldi	r24, 0x34	; 52
     180:	9c e0       	ldi	r25, 0x0C	; 12
     182:	21 50       	subi	r18, 0x01	; 1
     184:	80 40       	sbci	r24, 0x00	; 0
     186:	90 40       	sbci	r25, 0x00	; 0
     188:	e1 f7       	brne	.-8      	; 0x182 <Right+0x18>
     18a:	00 c0       	rjmp	.+0      	; 0x18c <Right+0x22>
     18c:	00 00       	nop
	_delay_ms(250);
	Stop();
     18e:	0e 94 ae 00 	call	0x15c	; 0x15c <Stop>
     192:	08 95       	ret

00000194 <Left>:
}
				// ----- Motor Left Movement ----- //
void Left()
{
	motor_PWM(15);
     194:	8f e0       	ldi	r24, 0x0F	; 15
     196:	0e 94 53 00 	call	0xa6	; 0xa6 <motor_PWM>
	PORTD |= (1 << _MOTOR_DIRECTION_IN2) | (1 << _MOTOR_DIRECTION_IN3);
     19a:	8b b1       	in	r24, 0x0b	; 11
     19c:	86 60       	ori	r24, 0x06	; 6
     19e:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~((1 << _MOTOR_DIRECTION_IN1) | (1 << _MOTOR_DIRECTION_IN4));
     1a0:	8b b1       	in	r24, 0x0b	; 11
     1a2:	86 7f       	andi	r24, 0xF6	; 246
     1a4:	8b b9       	out	0x0b, r24	; 11
     1a6:	2f ef       	ldi	r18, 0xFF	; 255
     1a8:	84 e3       	ldi	r24, 0x34	; 52
     1aa:	9c e0       	ldi	r25, 0x0C	; 12
     1ac:	21 50       	subi	r18, 0x01	; 1
     1ae:	80 40       	sbci	r24, 0x00	; 0
     1b0:	90 40       	sbci	r25, 0x00	; 0
     1b2:	e1 f7       	brne	.-8      	; 0x1ac <Left+0x18>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <Left+0x22>
     1b6:	00 00       	nop
	_delay_ms(250);
	Stop();
     1b8:	0e 94 ae 00 	call	0x15c	; 0x15c <Stop>
     1bc:	08 95       	ret

000001be <Rotate>:
}

				// ----- Motor Rotate Movement ----- //
void Rotate()
{
	motor_PWM(15);
     1be:	8f e0       	ldi	r24, 0x0F	; 15
     1c0:	0e 94 53 00 	call	0xa6	; 0xa6 <motor_PWM>
	// Backward
	PORTD &= ~((1 << _MOTOR_DIRECTION_IN1) | (1 << _MOTOR_DIRECTION_IN3));
     1c4:	8b b1       	in	r24, 0x0b	; 11
     1c6:	8a 7f       	andi	r24, 0xFA	; 250
     1c8:	8b b9       	out	0x0b, r24	; 11
	PORTD |= (1 << _MOTOR_DIRECTION_IN2) | (1 << _MOTOR_DIRECTION_IN4);
     1ca:	8b b1       	in	r24, 0x0b	; 11
     1cc:	8a 60       	ori	r24, 0x0A	; 10
     1ce:	8b b9       	out	0x0b, r24	; 11
     1d0:	2f ef       	ldi	r18, 0xFF	; 255
     1d2:	89 e6       	ldi	r24, 0x69	; 105
     1d4:	98 e1       	ldi	r25, 0x18	; 24
     1d6:	21 50       	subi	r18, 0x01	; 1
     1d8:	80 40       	sbci	r24, 0x00	; 0
     1da:	90 40       	sbci	r25, 0x00	; 0
     1dc:	e1 f7       	brne	.-8      	; 0x1d6 <Rotate+0x18>
     1de:	00 c0       	rjmp	.+0      	; 0x1e0 <Rotate+0x22>
     1e0:	00 00       	nop
	_delay_ms(500);
	Stop();
     1e2:	0e 94 ae 00 	call	0x15c	; 0x15c <Stop>
	
	// Rotate
	PORTD |= (1 << _MOTOR_DIRECTION_IN1) | (1 << _MOTOR_DIRECTION_IN4);
     1e6:	8b b1       	in	r24, 0x0b	; 11
     1e8:	89 60       	ori	r24, 0x09	; 9
     1ea:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~((1 << _MOTOR_DIRECTION_IN2) | (1 << _MOTOR_DIRECTION_IN3));
     1ec:	8b b1       	in	r24, 0x0b	; 11
     1ee:	89 7f       	andi	r24, 0xF9	; 249
     1f0:	8b b9       	out	0x0b, r24	; 11
     1f2:	2f ef       	ldi	r18, 0xFF	; 255
     1f4:	8c eb       	ldi	r24, 0xBC	; 188
     1f6:	9f e1       	ldi	r25, 0x1F	; 31
     1f8:	21 50       	subi	r18, 0x01	; 1
     1fa:	80 40       	sbci	r24, 0x00	; 0
     1fc:	90 40       	sbci	r25, 0x00	; 0
     1fe:	e1 f7       	brne	.-8      	; 0x1f8 <Rotate+0x3a>
     200:	00 c0       	rjmp	.+0      	; 0x202 <Rotate+0x44>
     202:	00 00       	nop
	_delay_ms(650);
	Stop();
     204:	0e 94 ae 00 	call	0x15c	; 0x15c <Stop>
     208:	08 95       	ret

0000020a <Q_random>:
		_delay_ms(500);
	}
	PORTB &= ~(1<<4); //close the blue LED
	DDRB |= 1 << 5;	  // enable the GREEN LED
	PORTB |= 1 << 5;  // enable the GREEN LED
}
     20a:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <rand>
     20e:	64 e6       	ldi	r22, 0x64	; 100
     210:	70 e0       	ldi	r23, 0x00	; 0
     212:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__divmodhi4>
     216:	bc 01       	movw	r22, r24
     218:	99 0f       	add	r25, r25
     21a:	88 0b       	sbc	r24, r24
     21c:	99 0b       	sbc	r25, r25
     21e:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatsisf>
     222:	20 e0       	ldi	r18, 0x00	; 0
     224:	30 e0       	ldi	r19, 0x00	; 0
     226:	48 ec       	ldi	r20, 0xC8	; 200
     228:	52 e4       	ldi	r21, 0x42	; 66
     22a:	0e 94 41 05 	call	0xa82	; 0xa82 <__divsf3>
     22e:	08 95       	ret

00000230 <decay>:
     230:	24 ea       	ldi	r18, 0xA4	; 164
     232:	30 e7       	ldi	r19, 0x70	; 112
     234:	4d e7       	ldi	r20, 0x7D	; 125
     236:	5f e3       	ldi	r21, 0x3F	; 63
     238:	0e 94 a0 06 	call	0xd40	; 0xd40 <__mulsf3>
     23c:	08 95       	ret

0000023e <Q_max>:
     23e:	cf 92       	push	r12
     240:	df 92       	push	r13
     242:	ef 92       	push	r14
     244:	ff 92       	push	r15
     246:	0f 93       	push	r16
     248:	1f 93       	push	r17
     24a:	cf 93       	push	r28
     24c:	df 93       	push	r29
     24e:	c6 2e       	mov	r12, r22
     250:	d7 2e       	mov	r13, r23
     252:	e8 2e       	mov	r14, r24
     254:	f9 2e       	mov	r15, r25
     256:	02 2f       	mov	r16, r18
     258:	13 2f       	mov	r17, r19
     25a:	d4 2f       	mov	r29, r20
     25c:	c5 2f       	mov	r28, r21
     25e:	0e 94 9b 06 	call	0xd36	; 0xd36 <__gesf2>
     262:	88 23       	and	r24, r24
     264:	24 f0       	brlt	.+8      	; 0x26e <Q_max+0x30>
     266:	0c 2d       	mov	r16, r12
     268:	1d 2d       	mov	r17, r13
     26a:	de 2d       	mov	r29, r14
     26c:	cf 2d       	mov	r28, r15
     26e:	60 2f       	mov	r22, r16
     270:	71 2f       	mov	r23, r17
     272:	8d 2f       	mov	r24, r29
     274:	9c 2f       	mov	r25, r28
     276:	df 91       	pop	r29
     278:	cf 91       	pop	r28
     27a:	1f 91       	pop	r17
     27c:	0f 91       	pop	r16
     27e:	ff 90       	pop	r15
     280:	ef 90       	pop	r14
     282:	df 90       	pop	r13
     284:	cf 90       	pop	r12
     286:	08 95       	ret

00000288 <getMax>:
     288:	8f 92       	push	r8
     28a:	9f 92       	push	r9
     28c:	af 92       	push	r10
     28e:	bf 92       	push	r11
     290:	ef 92       	push	r14
     292:	ff 92       	push	r15
     294:	0f 93       	push	r16
     296:	1f 93       	push	r17
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
     2a0:	60 97       	sbiw	r28, 0x10	; 16
     2a2:	0f b6       	in	r0, 0x3f	; 63
     2a4:	f8 94       	cli
     2a6:	de bf       	out	0x3e, r29	; 62
     2a8:	0f be       	out	0x3f, r0	; 63
     2aa:	cd bf       	out	0x3d, r28	; 61
     2ac:	7c 01       	movw	r14, r24
     2ae:	88 e0       	ldi	r24, 0x08	; 8
     2b0:	ea e8       	ldi	r30, 0x8A	; 138
     2b2:	f1 e0       	ldi	r31, 0x01	; 1
     2b4:	de 01       	movw	r26, r28
     2b6:	19 96       	adiw	r26, 0x09	; 9
     2b8:	01 90       	ld	r0, Z+
     2ba:	0d 92       	st	X+, r0
     2bc:	8a 95       	dec	r24
     2be:	e1 f7       	brne	.-8      	; 0x2b8 <getMax+0x30>
     2c0:	00 e0       	ldi	r16, 0x00	; 0
     2c2:	10 e0       	ldi	r17, 0x00	; 0
     2c4:	32 c0       	rjmp	.+100    	; 0x32a <getMax+0xa2>
     2c6:	f7 01       	movw	r30, r14
     2c8:	ee 0f       	add	r30, r30
     2ca:	ff 1f       	adc	r31, r31
     2cc:	ee 0f       	add	r30, r30
     2ce:	ff 1f       	adc	r31, r31
     2d0:	e0 0f       	add	r30, r16
     2d2:	f1 1f       	adc	r31, r17
     2d4:	ee 0f       	add	r30, r30
     2d6:	ff 1f       	adc	r31, r31
     2d8:	ee 0f       	add	r30, r30
     2da:	ff 1f       	adc	r31, r31
     2dc:	ee 56       	subi	r30, 0x6E	; 110
     2de:	fe 4f       	sbci	r31, 0xFE	; 254
     2e0:	80 80       	ld	r8, Z
     2e2:	91 80       	ldd	r9, Z+1	; 0x01
     2e4:	a2 80       	ldd	r10, Z+2	; 0x02
     2e6:	b3 80       	ldd	r11, Z+3	; 0x03
     2e8:	69 85       	ldd	r22, Y+9	; 0x09
     2ea:	7a 85       	ldd	r23, Y+10	; 0x0a
     2ec:	8b 85       	ldd	r24, Y+11	; 0x0b
     2ee:	9c 85       	ldd	r25, Y+12	; 0x0c
     2f0:	a5 01       	movw	r20, r10
     2f2:	94 01       	movw	r18, r8
     2f4:	0e 94 1f 01 	call	0x23e	; 0x23e <Q_max>
     2f8:	9b 01       	movw	r18, r22
     2fa:	ac 01       	movw	r20, r24
     2fc:	69 87       	std	Y+9, r22	; 0x09
     2fe:	7a 87       	std	Y+10, r23	; 0x0a
     300:	8b 87       	std	Y+11, r24	; 0x0b
     302:	9c 87       	std	Y+12, r25	; 0x0c
     304:	c5 01       	movw	r24, r10
     306:	b4 01       	movw	r22, r8
     308:	0e 94 3c 05 	call	0xa78	; 0xa78 <__cmpsf2>
     30c:	81 11       	cpse	r24, r1
     30e:	0b c0       	rjmp	.+22     	; 0x326 <getMax+0x9e>
     310:	b8 01       	movw	r22, r16
     312:	01 2e       	mov	r0, r17
     314:	00 0c       	add	r0, r0
     316:	88 0b       	sbc	r24, r24
     318:	99 0b       	sbc	r25, r25
     31a:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatsisf>
     31e:	6d 87       	std	Y+13, r22	; 0x0d
     320:	7e 87       	std	Y+14, r23	; 0x0e
     322:	8f 87       	std	Y+15, r24	; 0x0f
     324:	98 8b       	std	Y+16, r25	; 0x10
     326:	0f 5f       	subi	r16, 0xFF	; 255
     328:	1f 4f       	sbci	r17, 0xFF	; 255
     32a:	04 30       	cpi	r16, 0x04	; 4
     32c:	11 05       	cpc	r17, r1
     32e:	5c f2       	brlt	.-106    	; 0x2c6 <getMax+0x3e>
     330:	88 e0       	ldi	r24, 0x08	; 8
     332:	fe 01       	movw	r30, r28
     334:	39 96       	adiw	r30, 0x09	; 9
     336:	de 01       	movw	r26, r28
     338:	11 96       	adiw	r26, 0x01	; 1
     33a:	01 90       	ld	r0, Z+
     33c:	0d 92       	st	X+, r0
     33e:	8a 95       	dec	r24
     340:	e1 f7       	brne	.-8      	; 0x33a <getMax+0xb2>
     342:	29 81       	ldd	r18, Y+1	; 0x01
     344:	3a 81       	ldd	r19, Y+2	; 0x02
     346:	4b 81       	ldd	r20, Y+3	; 0x03
     348:	5c 81       	ldd	r21, Y+4	; 0x04
     34a:	6d 81       	ldd	r22, Y+5	; 0x05
     34c:	7e 81       	ldd	r23, Y+6	; 0x06
     34e:	8f 81       	ldd	r24, Y+7	; 0x07
     350:	98 85       	ldd	r25, Y+8	; 0x08
     352:	60 96       	adiw	r28, 0x10	; 16
     354:	0f b6       	in	r0, 0x3f	; 63
     356:	f8 94       	cli
     358:	de bf       	out	0x3e, r29	; 62
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	cd bf       	out	0x3d, r28	; 61
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	1f 91       	pop	r17
     364:	0f 91       	pop	r16
     366:	ff 90       	pop	r15
     368:	ef 90       	pop	r14
     36a:	bf 90       	pop	r11
     36c:	af 90       	pop	r10
     36e:	9f 90       	pop	r9
     370:	8f 90       	pop	r8
     372:	08 95       	ret

00000374 <getState>:
     374:	0f 93       	push	r16
     376:	1f 93       	push	r17
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	82 e0       	ldi	r24, 0x02	; 2
     37e:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <ReadUS>
     382:	02 2f       	mov	r16, r18
     384:	13 2f       	mov	r17, r19
     386:	8f e9       	ldi	r24, 0x9F	; 159
     388:	9f e0       	ldi	r25, 0x0F	; 15
     38a:	01 97       	sbiw	r24, 0x01	; 1
     38c:	f1 f7       	brne	.-4      	; 0x38a <getState+0x16>
     38e:	00 c0       	rjmp	.+0      	; 0x390 <getState+0x1c>
     390:	00 00       	nop
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <ReadUS>
     398:	c2 2f       	mov	r28, r18
     39a:	d3 2f       	mov	r29, r19
     39c:	8f e9       	ldi	r24, 0x9F	; 159
     39e:	9f e0       	ldi	r25, 0x0F	; 15
     3a0:	01 97       	sbiw	r24, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <getState+0x2c>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <getState+0x32>
     3a6:	00 00       	nop
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <ReadUS>
     3ae:	82 2f       	mov	r24, r18
     3b0:	93 2f       	mov	r25, r19
     3b2:	c0 31       	cpi	r28, 0x10	; 16
     3b4:	d1 05       	cpc	r29, r1
     3b6:	3c f0       	brlt	.+14     	; 0x3c6 <getState+0x52>
     3b8:	85 31       	cpi	r24, 0x15	; 21
     3ba:	91 05       	cpc	r25, r1
     3bc:	24 f0       	brlt	.+8      	; 0x3c6 <getState+0x52>
     3be:	00 31       	cpi	r16, 0x10	; 16
     3c0:	11 05       	cpc	r17, r1
     3c2:	0c f0       	brlt	.+2      	; 0x3c6 <getState+0x52>
     3c4:	40 c0       	rjmp	.+128    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     3c6:	c0 31       	cpi	r28, 0x10	; 16
     3c8:	d1 05       	cpc	r29, r1
     3ca:	34 f0       	brlt	.+12     	; 0x3d8 <getState+0x64>
     3cc:	85 31       	cpi	r24, 0x15	; 21
     3ce:	91 05       	cpc	r25, r1
     3d0:	1c f0       	brlt	.+6      	; 0x3d8 <getState+0x64>
     3d2:	00 31       	cpi	r16, 0x10	; 16
     3d4:	11 05       	cpc	r17, r1
     3d6:	d4 f1       	brlt	.+116    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     3d8:	c0 31       	cpi	r28, 0x10	; 16
     3da:	d1 05       	cpc	r29, r1
     3dc:	34 f0       	brlt	.+12     	; 0x3ea <getState+0x76>
     3de:	85 31       	cpi	r24, 0x15	; 21
     3e0:	91 05       	cpc	r25, r1
     3e2:	1c f4       	brge	.+6      	; 0x3ea <getState+0x76>
     3e4:	00 31       	cpi	r16, 0x10	; 16
     3e6:	11 05       	cpc	r17, r1
     3e8:	a4 f5       	brge	.+104    	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
     3ea:	c0 31       	cpi	r28, 0x10	; 16
     3ec:	d1 05       	cpc	r29, r1
     3ee:	34 f0       	brlt	.+12     	; 0x3fc <getState+0x88>
     3f0:	85 31       	cpi	r24, 0x15	; 21
     3f2:	91 05       	cpc	r25, r1
     3f4:	1c f4       	brge	.+6      	; 0x3fc <getState+0x88>
     3f6:	00 31       	cpi	r16, 0x10	; 16
     3f8:	11 05       	cpc	r17, r1
     3fa:	74 f1       	brlt	.+92     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     3fc:	c0 31       	cpi	r28, 0x10	; 16
     3fe:	d1 05       	cpc	r29, r1
     400:	34 f4       	brge	.+12     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     402:	85 31       	cpi	r24, 0x15	; 21
     404:	91 05       	cpc	r25, r1
     406:	1c f0       	brlt	.+6      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     408:	00 31       	cpi	r16, 0x10	; 16
     40a:	11 05       	cpc	r17, r1
     40c:	44 f5       	brge	.+80     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     40e:	c0 31       	cpi	r28, 0x10	; 16
     410:	d1 05       	cpc	r29, r1
     412:	34 f4       	brge	.+12     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     414:	85 31       	cpi	r24, 0x15	; 21
     416:	91 05       	cpc	r25, r1
     418:	1c f0       	brlt	.+6      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     41a:	00 31       	cpi	r16, 0x10	; 16
     41c:	11 05       	cpc	r17, r1
     41e:	14 f1       	brlt	.+68     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
     420:	c0 31       	cpi	r28, 0x10	; 16
     422:	d1 05       	cpc	r29, r1
     424:	34 f4       	brge	.+12     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     426:	85 31       	cpi	r24, 0x15	; 21
     428:	91 05       	cpc	r25, r1
     42a:	1c f4       	brge	.+6      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     42c:	00 31       	cpi	r16, 0x10	; 16
     42e:	11 05       	cpc	r17, r1
     430:	e4 f4       	brge	.+56     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
     432:	60 97       	sbiw	r28, 0x10	; 16
     434:	ec f4       	brge	.+58     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
     436:	45 97       	sbiw	r24, 0x15	; 21
     438:	f4 f4       	brge	.+60     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     43a:	00 31       	cpi	r16, 0x10	; 16
     43c:	11 05       	cpc	r17, r1
     43e:	f4 f0       	brlt	.+60     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     440:	8f ef       	ldi	r24, 0xFF	; 255
     442:	9f ef       	ldi	r25, 0xFF	; 255
     444:	1d c0       	rjmp	.+58     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	1a c0       	rjmp	.+52     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	17 c0       	rjmp	.+46     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     452:	82 e0       	ldi	r24, 0x02	; 2
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	14 c0       	rjmp	.+40     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     458:	83 e0       	ldi	r24, 0x03	; 3
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	11 c0       	rjmp	.+34     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     45e:	84 e0       	ldi	r24, 0x04	; 4
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	0e c0       	rjmp	.+28     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     464:	85 e0       	ldi	r24, 0x05	; 5
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	0b c0       	rjmp	.+22     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     46a:	86 e0       	ldi	r24, 0x06	; 6
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	08 c0       	rjmp	.+16     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     470:	8f ef       	ldi	r24, 0xFF	; 255
     472:	9f ef       	ldi	r25, 0xFF	; 255
     474:	05 c0       	rjmp	.+10     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     476:	8f ef       	ldi	r24, 0xFF	; 255
     478:	9f ef       	ldi	r25, 0xFF	; 255
     47a:	02 c0       	rjmp	.+4      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
     47c:	87 e0       	ldi	r24, 0x07	; 7
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	df 91       	pop	r29
     482:	cf 91       	pop	r28
     484:	1f 91       	pop	r17
     486:	0f 91       	pop	r16
     488:	08 95       	ret

0000048a <update2>:
     48a:	4f 92       	push	r4
     48c:	5f 92       	push	r5
     48e:	6f 92       	push	r6
     490:	7f 92       	push	r7
     492:	8f 92       	push	r8
     494:	9f 92       	push	r9
     496:	af 92       	push	r10
     498:	bf 92       	push	r11
     49a:	ef 92       	push	r14
     49c:	ff 92       	push	r15
     49e:	0f 93       	push	r16
     4a0:	1f 93       	push	r17
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	cd b7       	in	r28, 0x3d	; 61
     4a8:	de b7       	in	r29, 0x3e	; 62
     4aa:	28 97       	sbiw	r28, 0x08	; 8
     4ac:	0f b6       	in	r0, 0x3f	; 63
     4ae:	f8 94       	cli
     4b0:	de bf       	out	0x3e, r29	; 62
     4b2:	0f be       	out	0x3f, r0	; 63
     4b4:	cd bf       	out	0x3d, r28	; 61
     4b6:	79 01       	movw	r14, r18
     4b8:	88 0f       	add	r24, r24
     4ba:	99 1f       	adc	r25, r25
     4bc:	88 0f       	add	r24, r24
     4be:	99 1f       	adc	r25, r25
     4c0:	8c 01       	movw	r16, r24
     4c2:	04 0f       	add	r16, r20
     4c4:	15 1f       	adc	r17, r21
     4c6:	00 0f       	add	r16, r16
     4c8:	11 1f       	adc	r17, r17
     4ca:	00 0f       	add	r16, r16
     4cc:	11 1f       	adc	r17, r17
     4ce:	0e 56       	subi	r16, 0x6E	; 110
     4d0:	1e 4f       	sbci	r17, 0xFE	; 254
     4d2:	f8 01       	movw	r30, r16
     4d4:	80 80       	ld	r8, Z
     4d6:	91 80       	ldd	r9, Z+1	; 0x01
     4d8:	a2 80       	ldd	r10, Z+2	; 0x02
     4da:	b3 80       	ldd	r11, Z+3	; 0x03
     4dc:	80 92 20 02 	sts	0x0220, r8	; 0x800220 <Old_Q>
     4e0:	90 92 21 02 	sts	0x0221, r9	; 0x800221 <Old_Q+0x1>
     4e4:	a0 92 22 02 	sts	0x0222, r10	; 0x800222 <Old_Q+0x2>
     4e8:	b0 92 23 02 	sts	0x0223, r11	; 0x800223 <Old_Q+0x3>
     4ec:	cb 01       	movw	r24, r22
     4ee:	0e 94 44 01 	call	0x288	; 0x288 <getMax>
     4f2:	29 83       	std	Y+1, r18	; 0x01
     4f4:	3a 83       	std	Y+2, r19	; 0x02
     4f6:	4b 83       	std	Y+3, r20	; 0x03
     4f8:	5c 83       	std	Y+4, r21	; 0x04
     4fa:	49 80       	ldd	r4, Y+1	; 0x01
     4fc:	5a 80       	ldd	r5, Y+2	; 0x02
     4fe:	6b 80       	ldd	r6, Y+3	; 0x03
     500:	7c 80       	ldd	r7, Y+4	; 0x04
     502:	40 92 18 02 	sts	0x0218, r4	; 0x800218 <max_Q>
     506:	50 92 19 02 	sts	0x0219, r5	; 0x800219 <max_Q+0x1>
     50a:	60 92 1a 02 	sts	0x021A, r6	; 0x80021a <max_Q+0x2>
     50e:	70 92 1b 02 	sts	0x021B, r7	; 0x80021b <max_Q+0x3>
     512:	26 e6       	ldi	r18, 0x66	; 102
     514:	36 e6       	ldi	r19, 0x66	; 102
     516:	46 e6       	ldi	r20, 0x66	; 102
     518:	5f e3       	ldi	r21, 0x3F	; 63
     51a:	c5 01       	movw	r24, r10
     51c:	b4 01       	movw	r22, r8
     51e:	0e 94 a0 06 	call	0xd40	; 0xd40 <__mulsf3>
     522:	4b 01       	movw	r8, r22
     524:	5c 01       	movw	r10, r24
     526:	20 e0       	ldi	r18, 0x00	; 0
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	40 e0       	ldi	r20, 0x00	; 0
     52c:	5f e3       	ldi	r21, 0x3F	; 63
     52e:	c3 01       	movw	r24, r6
     530:	b2 01       	movw	r22, r4
     532:	0e 94 a0 06 	call	0xd40	; 0xd40 <__mulsf3>
     536:	2b 01       	movw	r4, r22
     538:	3c 01       	movw	r6, r24
     53a:	b7 01       	movw	r22, r14
     53c:	ff 0c       	add	r15, r15
     53e:	88 0b       	sbc	r24, r24
     540:	99 0b       	sbc	r25, r25
     542:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatsisf>
     546:	a3 01       	movw	r20, r6
     548:	92 01       	movw	r18, r4
     54a:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__addsf3>
     54e:	2d ec       	ldi	r18, 0xCD	; 205
     550:	3c ec       	ldi	r19, 0xCC	; 204
     552:	4c ec       	ldi	r20, 0xCC	; 204
     554:	5d e3       	ldi	r21, 0x3D	; 61
     556:	0e 94 a0 06 	call	0xd40	; 0xd40 <__mulsf3>
     55a:	9b 01       	movw	r18, r22
     55c:	ac 01       	movw	r20, r24
     55e:	c5 01       	movw	r24, r10
     560:	b4 01       	movw	r22, r8
     562:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__addsf3>
     566:	60 93 1c 02 	sts	0x021C, r22	; 0x80021c <new_Q>
     56a:	70 93 1d 02 	sts	0x021D, r23	; 0x80021d <new_Q+0x1>
     56e:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <new_Q+0x2>
     572:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <new_Q+0x3>
     576:	f8 01       	movw	r30, r16
     578:	60 83       	st	Z, r22
     57a:	71 83       	std	Z+1, r23	; 0x01
     57c:	82 83       	std	Z+2, r24	; 0x02
     57e:	93 83       	std	Z+3, r25	; 0x03
     580:	28 96       	adiw	r28, 0x08	; 8
     582:	0f b6       	in	r0, 0x3f	; 63
     584:	f8 94       	cli
     586:	de bf       	out	0x3e, r29	; 62
     588:	0f be       	out	0x3f, r0	; 63
     58a:	cd bf       	out	0x3d, r28	; 61
     58c:	df 91       	pop	r29
     58e:	cf 91       	pop	r28
     590:	1f 91       	pop	r17
     592:	0f 91       	pop	r16
     594:	ff 90       	pop	r15
     596:	ef 90       	pop	r14
     598:	bf 90       	pop	r11
     59a:	af 90       	pop	r10
     59c:	9f 90       	pop	r9
     59e:	8f 90       	pop	r8
     5a0:	7f 90       	pop	r7
     5a2:	6f 90       	pop	r6
     5a4:	5f 90       	pop	r5
     5a6:	4f 90       	pop	r4
     5a8:	08 95       	ret

000005aa <train2>:
     5aa:	cf 92       	push	r12
     5ac:	df 92       	push	r13
     5ae:	ef 92       	push	r14
     5b0:	ff 92       	push	r15
     5b2:	0f 93       	push	r16
     5b4:	1f 93       	push	r17
     5b6:	cf 93       	push	r28
     5b8:	df 93       	push	r29
     5ba:	cd b7       	in	r28, 0x3d	; 61
     5bc:	de b7       	in	r29, 0x3e	; 62
     5be:	28 97       	sbiw	r28, 0x08	; 8
     5c0:	0f b6       	in	r0, 0x3f	; 63
     5c2:	f8 94       	cli
     5c4:	de bf       	out	0x3e, r29	; 62
     5c6:	0f be       	out	0x3f, r0	; 63
     5c8:	cd bf       	out	0x3d, r28	; 61
     5ca:	84 b1       	in	r24, 0x04	; 4
     5cc:	80 61       	ori	r24, 0x10	; 16
     5ce:	84 b9       	out	0x04, r24	; 4
     5d0:	85 b1       	in	r24, 0x05	; 5
     5d2:	80 61       	ori	r24, 0x10	; 16
     5d4:	85 b9       	out	0x05, r24	; 5
     5d6:	00 e0       	ldi	r16, 0x00	; 0
     5d8:	10 e0       	ldi	r17, 0x00	; 0
     5da:	a3 c0       	rjmp	.+326    	; 0x722 <train2+0x178>
     5dc:	0e 94 a4 00 	call	0x148	; 0x148 <Forward>
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <ReadUS>
     5e6:	82 2f       	mov	r24, r18
     5e8:	93 2f       	mov	r25, r19
     5ea:	45 97       	sbiw	r24, 0x15	; 21
     5ec:	bc f7       	brge	.-18     	; 0x5dc <train2+0x32>
     5ee:	0e 94 ae 00 	call	0x15c	; 0x15c <Stop>
     5f2:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <currentState>
     5f6:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <currentState+0x1>
     5fa:	01 96       	adiw	r24, 0x01	; 1
     5fc:	87 70       	andi	r24, 0x07	; 7
     5fe:	90 78       	andi	r25, 0x80	; 128
     600:	99 23       	and	r25, r25
     602:	24 f4       	brge	.+8      	; 0x60c <train2+0x62>
     604:	01 97       	sbiw	r24, 0x01	; 1
     606:	88 6f       	ori	r24, 0xF8	; 248
     608:	9f 6f       	ori	r25, 0xFF	; 255
     60a:	01 96       	adiw	r24, 0x01	; 1
     60c:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <nextState+0x1>
     610:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <nextState>
     614:	0e 94 05 01 	call	0x20a	; 0x20a <Q_random>
     618:	20 91 84 01 	lds	r18, 0x0184	; 0x800184 <epsilon>
     61c:	30 91 85 01 	lds	r19, 0x0185	; 0x800185 <epsilon+0x1>
     620:	40 91 86 01 	lds	r20, 0x0186	; 0x800186 <epsilon+0x2>
     624:	50 91 87 01 	lds	r21, 0x0187	; 0x800187 <epsilon+0x3>
     628:	0e 94 3c 05 	call	0xa78	; 0xa78 <__cmpsf2>
     62c:	18 16       	cp	r1, r24
     62e:	7c f0       	brlt	.+30     	; 0x64e <train2+0xa4>
     630:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <rand>
     634:	83 70       	andi	r24, 0x03	; 3
     636:	90 78       	andi	r25, 0x80	; 128
     638:	99 23       	and	r25, r25
     63a:	24 f4       	brge	.+8      	; 0x644 <train2+0x9a>
     63c:	01 97       	sbiw	r24, 0x01	; 1
     63e:	8c 6f       	ori	r24, 0xFC	; 252
     640:	9f 6f       	ori	r25, 0xFF	; 255
     642:	01 96       	adiw	r24, 0x01	; 1
     644:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <actionID+0x1>
     648:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <actionID>
     64c:	18 c0       	rjmp	.+48     	; 0x67e <train2+0xd4>
     64e:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <currentState>
     652:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <currentState+0x1>
     656:	0e 94 44 01 	call	0x288	; 0x288 <getMax>
     65a:	29 83       	std	Y+1, r18	; 0x01
     65c:	3a 83       	std	Y+2, r19	; 0x02
     65e:	4b 83       	std	Y+3, r20	; 0x03
     660:	5c 83       	std	Y+4, r21	; 0x04
     662:	6d 83       	std	Y+5, r22	; 0x05
     664:	7e 83       	std	Y+6, r23	; 0x06
     666:	8f 83       	std	Y+7, r24	; 0x07
     668:	98 87       	std	Y+8, r25	; 0x08
     66a:	6d 81       	ldd	r22, Y+5	; 0x05
     66c:	7e 81       	ldd	r23, Y+6	; 0x06
     66e:	8f 81       	ldd	r24, Y+7	; 0x07
     670:	98 85       	ldd	r25, Y+8	; 0x08
     672:	0e 94 b3 05 	call	0xb66	; 0xb66 <__fixsfsi>
     676:	70 93 13 02 	sts	0x0213, r23	; 0x800213 <actionID+0x1>
     67a:	60 93 12 02 	sts	0x0212, r22	; 0x800212 <actionID>
     67e:	e0 90 16 02 	lds	r14, 0x0216	; 0x800216 <currentState>
     682:	f0 90 17 02 	lds	r15, 0x0217	; 0x800217 <currentState+0x1>
     686:	c0 90 12 02 	lds	r12, 0x0212	; 0x800212 <actionID>
     68a:	d0 90 13 02 	lds	r13, 0x0213	; 0x800213 <actionID+0x1>
     68e:	f7 01       	movw	r30, r14
     690:	ee 0f       	add	r30, r30
     692:	ff 1f       	adc	r31, r31
     694:	ee 0f       	add	r30, r30
     696:	ff 1f       	adc	r31, r31
     698:	ec 0d       	add	r30, r12
     69a:	fd 1d       	adc	r31, r13
     69c:	ee 0f       	add	r30, r30
     69e:	ff 1f       	adc	r31, r31
     6a0:	ee 0f       	add	r30, r30
     6a2:	ff 1f       	adc	r31, r31
     6a4:	ec 5f       	subi	r30, 0xFC	; 252
     6a6:	fe 4f       	sbci	r31, 0xFE	; 254
     6a8:	60 81       	ld	r22, Z
     6aa:	71 81       	ldd	r23, Z+1	; 0x01
     6ac:	82 81       	ldd	r24, Z+2	; 0x02
     6ae:	93 81       	ldd	r25, Z+3	; 0x03
     6b0:	60 93 24 02 	sts	0x0224, r22	; 0x800224 <reward>
     6b4:	70 93 25 02 	sts	0x0225, r23	; 0x800225 <reward+0x1>
     6b8:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <reward+0x2>
     6bc:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <reward+0x3>
     6c0:	0e 94 b3 05 	call	0xb66	; 0xb66 <__fixsfsi>
     6c4:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <nextState>
     6c8:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <nextState+0x1>
     6cc:	9b 01       	movw	r18, r22
     6ce:	a6 01       	movw	r20, r12
     6d0:	bf 01       	movw	r22, r30
     6d2:	c7 01       	movw	r24, r14
     6d4:	0e 94 45 02 	call	0x48a	; 0x48a <update2>
     6d8:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <nextState>
     6dc:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <nextState+0x1>
     6e0:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <currentState+0x1>
     6e4:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <currentState>
     6e8:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <epsilon>
     6ec:	70 91 85 01 	lds	r23, 0x0185	; 0x800185 <epsilon+0x1>
     6f0:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <epsilon+0x2>
     6f4:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <epsilon+0x3>
     6f8:	0e 94 18 01 	call	0x230	; 0x230 <decay>
     6fc:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <epsilon>
     700:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <epsilon+0x1>
     704:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <epsilon+0x2>
     708:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <epsilon+0x3>
     70c:	2f ef       	ldi	r18, 0xFF	; 255
     70e:	81 ee       	ldi	r24, 0xE1	; 225
     710:	94 e0       	ldi	r25, 0x04	; 4
     712:	21 50       	subi	r18, 0x01	; 1
     714:	80 40       	sbci	r24, 0x00	; 0
     716:	90 40       	sbci	r25, 0x00	; 0
     718:	e1 f7       	brne	.-8      	; 0x712 <train2+0x168>
     71a:	00 c0       	rjmp	.+0      	; 0x71c <train2+0x172>
     71c:	00 00       	nop
     71e:	0f 5f       	subi	r16, 0xFF	; 255
     720:	1f 4f       	sbci	r17, 0xFF	; 255
     722:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <episodes>
     726:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <episodes+0x1>
     72a:	08 17       	cp	r16, r24
     72c:	19 07       	cpc	r17, r25
     72e:	0c f4       	brge	.+2      	; 0x732 <train2+0x188>
     730:	55 cf       	rjmp	.-342    	; 0x5dc <train2+0x32>
     732:	85 b1       	in	r24, 0x05	; 5
     734:	8f 7e       	andi	r24, 0xEF	; 239
     736:	85 b9       	out	0x05, r24	; 5
     738:	28 96       	adiw	r28, 0x08	; 8
     73a:	0f b6       	in	r0, 0x3f	; 63
     73c:	f8 94       	cli
     73e:	de bf       	out	0x3e, r29	; 62
     740:	0f be       	out	0x3f, r0	; 63
     742:	cd bf       	out	0x3d, r28	; 61
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	1f 91       	pop	r17
     74a:	0f 91       	pop	r16
     74c:	ff 90       	pop	r15
     74e:	ef 90       	pop	r14
     750:	df 90       	pop	r13
     752:	cf 90       	pop	r12
     754:	08 95       	ret

00000756 <test2>:


void test2()
	{
     756:	cf 93       	push	r28
     758:	df 93       	push	r29
     75a:	cd b7       	in	r28, 0x3d	; 61
     75c:	de b7       	in	r29, 0x3e	; 62
     75e:	28 97       	sbiw	r28, 0x08	; 8
     760:	0f b6       	in	r0, 0x3f	; 63
     762:	f8 94       	cli
     764:	de bf       	out	0x3e, r29	; 62
     766:	0f be       	out	0x3f, r0	; 63
     768:	cd bf       	out	0x3d, r28	; 61
		while(1)
		{
			//while(getState() == 0) Forward(); can be used with train 3
			
			actionID = getMax(getState())._max_ind;
     76a:	0e 94 ba 01 	call	0x374	; 0x374 <getState>
     76e:	0e 94 44 01 	call	0x288	; 0x288 <getMax>
     772:	29 83       	std	Y+1, r18	; 0x01
     774:	3a 83       	std	Y+2, r19	; 0x02
     776:	4b 83       	std	Y+3, r20	; 0x03
     778:	5c 83       	std	Y+4, r21	; 0x04
     77a:	6d 83       	std	Y+5, r22	; 0x05
     77c:	7e 83       	std	Y+6, r23	; 0x06
     77e:	8f 83       	std	Y+7, r24	; 0x07
     780:	98 87       	std	Y+8, r25	; 0x08
     782:	6d 81       	ldd	r22, Y+5	; 0x05
     784:	7e 81       	ldd	r23, Y+6	; 0x06
     786:	8f 81       	ldd	r24, Y+7	; 0x07
     788:	98 85       	ldd	r25, Y+8	; 0x08
     78a:	0e 94 b3 05 	call	0xb66	; 0xb66 <__fixsfsi>
     78e:	70 93 13 02 	sts	0x0213, r23	; 0x800213 <actionID+0x1>
     792:	60 93 12 02 	sts	0x0212, r22	; 0x800212 <actionID>
			
			if(actionID == 0){ //forward
     796:	61 15       	cp	r22, r1
     798:	71 05       	cpc	r23, r1
     79a:	19 f4       	brne	.+6      	; 0x7a2 <test2+0x4c>
				Forward(); 
     79c:	0e 94 a4 00 	call	0x148	; 0x148 <Forward>
     7a0:	e4 cf       	rjmp	.-56     	; 0x76a <test2+0x14>
			}
			else if(actionID == 1){ // left
     7a2:	61 30       	cpi	r22, 0x01	; 1
     7a4:	71 05       	cpc	r23, r1
     7a6:	19 f4       	brne	.+6      	; 0x7ae <test2+0x58>
				Left(); 
     7a8:	0e 94 ca 00 	call	0x194	; 0x194 <Left>
     7ac:	de cf       	rjmp	.-68     	; 0x76a <test2+0x14>
			}
			else if(actionID == 2){ // right
     7ae:	62 30       	cpi	r22, 0x02	; 2
     7b0:	71 05       	cpc	r23, r1
     7b2:	19 f4       	brne	.+6      	; 0x7ba <test2+0x64>
				Right();
     7b4:	0e 94 b5 00 	call	0x16a	; 0x16a <Right>
     7b8:	d8 cf       	rjmp	.-80     	; 0x76a <test2+0x14>
			}
			else if(actionID == 3) // rotate
     7ba:	63 30       	cpi	r22, 0x03	; 3
     7bc:	71 05       	cpc	r23, r1
     7be:	19 f4       	brne	.+6      	; 0x7c6 <test2+0x70>
			{
				Rotate();
     7c0:	0e 94 df 00 	call	0x1be	; 0x1be <Rotate>
     7c4:	d2 cf       	rjmp	.-92     	; 0x76a <test2+0x14>
			}
			else  { //not a case
				Stop();
     7c6:	0e 94 ae 00 	call	0x15c	; 0x15c <Stop>
     7ca:	2f ef       	ldi	r18, 0xFF	; 255
     7cc:	8b e7       	ldi	r24, 0x7B	; 123
     7ce:	92 e9       	ldi	r25, 0x92	; 146
     7d0:	21 50       	subi	r18, 0x01	; 1
     7d2:	80 40       	sbci	r24, 0x00	; 0
     7d4:	90 40       	sbci	r25, 0x00	; 0
     7d6:	e1 f7       	brne	.-8      	; 0x7d0 <test2+0x7a>
     7d8:	00 c0       	rjmp	.+0      	; 0x7da <test2+0x84>
     7da:	00 00       	nop
     7dc:	c6 cf       	rjmp	.-116    	; 0x76a <test2+0x14>

000007de <Ultrasonic_init>:

				// ----- Ultrasonic Initialization Configuration ----- //
void Ultrasonic_init()
{
	// Pins Direction
	DDRC |= (1 << _ULTRASONIC_LEFT_TRIGGER) | (1 << _ULTRASONIC_MIDDLE_TRIGGER) |(1 << _ULTRASONIC_RIGHT_TRIGGER);
     7de:	87 b1       	in	r24, 0x07	; 7
     7e0:	87 60       	ori	r24, 0x07	; 7
     7e2:	87 b9       	out	0x07, r24	; 7
     7e4:	08 95       	ret

000007e6 <ReadUS>:
}


				// ----- Ultrasonic Distance Measurement ----- //
u64 ReadUS(u08 x)
{
     7e6:	af 92       	push	r10
     7e8:	bf 92       	push	r11
     7ea:	cf 92       	push	r12
     7ec:	df 92       	push	r13
     7ee:	ef 92       	push	r14
     7f0:	ff 92       	push	r15
     7f2:	0f 93       	push	r16
     7f4:	1f 93       	push	r17
     7f6:	cf 93       	push	r28
     7f8:	df 93       	push	r29
     7fa:	cd b7       	in	r28, 0x3d	; 61
     7fc:	de b7       	in	r29, 0x3e	; 62
     7fe:	61 97       	sbiw	r28, 0x11	; 17
     800:	0f b6       	in	r0, 0x3f	; 63
     802:	f8 94       	cli
     804:	de bf       	out	0x3e, r29	; 62
     806:	0f be       	out	0x3f, r0	; 63
     808:	cd bf       	out	0x3d, r28	; 61
     80a:	89 8b       	std	Y+17, r24	; 0x11
	u64 count = 0;					// Time Counts Variable
     80c:	19 82       	std	Y+1, r1	; 0x01
     80e:	1a 82       	std	Y+2, r1	; 0x02
     810:	1b 82       	std	Y+3, r1	; 0x03
     812:	1c 82       	std	Y+4, r1	; 0x04
     814:	1d 82       	std	Y+5, r1	; 0x05
     816:	1e 82       	std	Y+6, r1	; 0x06
     818:	1f 82       	std	Y+7, r1	; 0x07
     81a:	18 86       	std	Y+8, r1	; 0x08
	u64 distance = 0;				// Distance Between Ultrasonic & Obstacle
     81c:	19 86       	std	Y+9, r1	; 0x09
     81e:	1a 86       	std	Y+10, r1	; 0x0a
     820:	1b 86       	std	Y+11, r1	; 0x0b
     822:	1c 86       	std	Y+12, r1	; 0x0c
     824:	1d 86       	std	Y+13, r1	; 0x0d
     826:	1e 86       	std	Y+14, r1	; 0x0e
     828:	1f 86       	std	Y+15, r1	; 0x0f
     82a:	18 8a       	std	Y+16, r1	; 0x10
	
	if(x == 0){
     82c:	89 89       	ldd	r24, Y+17	; 0x11
     82e:	81 11       	cpse	r24, r1
     830:	0b c0       	rjmp	.+22     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
		PORTC |= (1<<0); //trigger pin 0 port c for 10 us for LUS
     832:	88 b1       	in	r24, 0x08	; 8
     834:	81 60       	ori	r24, 0x01	; 1
     836:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     838:	65 e3       	ldi	r22, 0x35	; 53
     83a:	6a 95       	dec	r22
     83c:	f1 f7       	brne	.-4      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     83e:	00 00       	nop
		_delay_us(10);
		PORTC &= ~(1<<0);
     840:	88 b1       	in	r24, 0x08	; 8
     842:	8e 7f       	andi	r24, 0xFE	; 254
     844:	88 b9       	out	0x08, r24	; 8
     846:	1b c0       	rjmp	.+54     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
	}
	else if(x == 1){
     848:	89 89       	ldd	r24, Y+17	; 0x11
     84a:	81 30       	cpi	r24, 0x01	; 1
     84c:	59 f4       	brne	.+22     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
		PORTC |= (1<<1); //trigger pin 1 port c for 10 us for MUS
     84e:	88 b1       	in	r24, 0x08	; 8
     850:	82 60       	ori	r24, 0x02	; 2
     852:	88 b9       	out	0x08, r24	; 8
     854:	75 e3       	ldi	r23, 0x35	; 53
     856:	7a 95       	dec	r23
     858:	f1 f7       	brne	.-4      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     85a:	00 00       	nop
		_delay_us(10);
		PORTC &= ~(1<<1);
     85c:	88 b1       	in	r24, 0x08	; 8
     85e:	8d 7f       	andi	r24, 0xFD	; 253
     860:	88 b9       	out	0x08, r24	; 8
     862:	0d c0       	rjmp	.+26     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
	}
	else if (x ==2){
     864:	89 89       	ldd	r24, Y+17	; 0x11
     866:	82 30       	cpi	r24, 0x02	; 2
     868:	51 f4       	brne	.+20     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
		PORTC |= (1<<2); //trigger pin 2 port c for 10 us for RUS
     86a:	88 b1       	in	r24, 0x08	; 8
     86c:	84 60       	ori	r24, 0x04	; 4
     86e:	88 b9       	out	0x08, r24	; 8
     870:	85 e3       	ldi	r24, 0x35	; 53
     872:	8a 95       	dec	r24
     874:	f1 f7       	brne	.-4      	; 0x872 <__DATA_REGION_LENGTH__+0x72>
     876:	00 00       	nop
		_delay_us(10);
		PORTC &= ~(1<<2);
     878:	88 b1       	in	r24, 0x08	; 8
     87a:	8b 7f       	andi	r24, 0xFB	; 251
     87c:	88 b9       	out	0x08, r24	; 8
	}
	while((PINB & (1<<x)) >> x == 0);
     87e:	43 b1       	in	r20, 0x03	; 3
     880:	29 89       	ldd	r18, Y+17	; 0x11
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	bc 01       	movw	r22, r24
     888:	02 c0       	rjmp	.+4      	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
     88a:	66 0f       	add	r22, r22
     88c:	77 1f       	adc	r23, r23
     88e:	2a 95       	dec	r18
     890:	e2 f7       	brpl	.-8      	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
     892:	84 2f       	mov	r24, r20
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	86 23       	and	r24, r22
     898:	97 23       	and	r25, r23
     89a:	29 89       	ldd	r18, Y+17	; 0x11
     89c:	02 c0       	rjmp	.+4      	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     89e:	95 95       	asr	r25
     8a0:	87 95       	ror	r24
     8a2:	2a 95       	dec	r18
     8a4:	e2 f7       	brpl	.-8      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     8a6:	89 2b       	or	r24, r25
     8a8:	51 f3       	breq	.-44     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
     8aa:	17 c0       	rjmp	.+46     	; 0x8da <__DATA_REGION_LENGTH__+0xda>
     8ac:	75 e0       	ldi	r23, 0x05	; 5
     8ae:	7a 95       	dec	r23
     8b0:	f1 f7       	brne	.-4      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
     8b2:	00 00       	nop
	while((PINB & (1<<x)) >>x == 1){
		// Converting The Counts To Microseconds Variable
		_delay_us(1);
		count++;
     8b4:	29 81       	ldd	r18, Y+1	; 0x01
     8b6:	3a 81       	ldd	r19, Y+2	; 0x02
     8b8:	4b 81       	ldd	r20, Y+3	; 0x03
     8ba:	5c 81       	ldd	r21, Y+4	; 0x04
     8bc:	6d 81       	ldd	r22, Y+5	; 0x05
     8be:	7e 81       	ldd	r23, Y+6	; 0x06
     8c0:	8f 81       	ldd	r24, Y+7	; 0x07
     8c2:	98 85       	ldd	r25, Y+8	; 0x08
     8c4:	a1 e0       	ldi	r26, 0x01	; 1
     8c6:	0e 94 80 07 	call	0xf00	; 0xf00 <__adddi3_s8>
     8ca:	29 83       	std	Y+1, r18	; 0x01
     8cc:	3a 83       	std	Y+2, r19	; 0x02
     8ce:	4b 83       	std	Y+3, r20	; 0x03
     8d0:	5c 83       	std	Y+4, r21	; 0x04
     8d2:	6d 83       	std	Y+5, r22	; 0x05
     8d4:	7e 83       	std	Y+6, r23	; 0x06
     8d6:	8f 83       	std	Y+7, r24	; 0x07
     8d8:	98 87       	std	Y+8, r25	; 0x08
		PORTC |= (1<<2); //trigger pin 2 port c for 10 us for RUS
		_delay_us(10);
		PORTC &= ~(1<<2);
	}
	while((PINB & (1<<x)) >> x == 0);
	while((PINB & (1<<x)) >>x == 1){
     8da:	43 b1       	in	r20, 0x03	; 3
     8dc:	29 89       	ldd	r18, Y+17	; 0x11
     8de:	81 e0       	ldi	r24, 0x01	; 1
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	bc 01       	movw	r22, r24
     8e4:	02 c0       	rjmp	.+4      	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
     8e6:	66 0f       	add	r22, r22
     8e8:	77 1f       	adc	r23, r23
     8ea:	2a 95       	dec	r18
     8ec:	e2 f7       	brpl	.-8      	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
     8ee:	84 2f       	mov	r24, r20
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	86 23       	and	r24, r22
     8f4:	97 23       	and	r25, r23
     8f6:	29 89       	ldd	r18, Y+17	; 0x11
     8f8:	02 c0       	rjmp	.+4      	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
     8fa:	95 95       	asr	r25
     8fc:	87 95       	ror	r24
     8fe:	2a 95       	dec	r18
     900:	e2 f7       	brpl	.-8      	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
     902:	01 97       	sbiw	r24, 0x01	; 1
     904:	99 f2       	breq	.-90     	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
		// Converting The Counts To Microseconds Variable
		_delay_us(1);
		count++;
	}
	// distance = (count*0.034)/(2);
	distance = count/9;					// Distance Equation.
     906:	29 81       	ldd	r18, Y+1	; 0x01
     908:	3a 81       	ldd	r19, Y+2	; 0x02
     90a:	4b 81       	ldd	r20, Y+3	; 0x03
     90c:	5c 81       	ldd	r21, Y+4	; 0x04
     90e:	6d 81       	ldd	r22, Y+5	; 0x05
     910:	7e 81       	ldd	r23, Y+6	; 0x06
     912:	8f 81       	ldd	r24, Y+7	; 0x07
     914:	98 85       	ldd	r25, Y+8	; 0x08
     916:	0f 2e       	mov	r0, r31
     918:	f9 e0       	ldi	r31, 0x09	; 9
     91a:	af 2e       	mov	r10, r31
     91c:	f0 2d       	mov	r31, r0
     91e:	b1 2c       	mov	r11, r1
     920:	c1 2c       	mov	r12, r1
     922:	d1 2c       	mov	r13, r1
     924:	e1 2c       	mov	r14, r1
     926:	f1 2c       	mov	r15, r1
     928:	00 e0       	ldi	r16, 0x00	; 0
     92a:	10 e0       	ldi	r17, 0x00	; 0
     92c:	0e 94 23 07 	call	0xe46	; 0xe46 <__udivdi3>
     930:	29 87       	std	Y+9, r18	; 0x09
     932:	3a 87       	std	Y+10, r19	; 0x0a
     934:	4b 87       	std	Y+11, r20	; 0x0b
     936:	5c 87       	std	Y+12, r21	; 0x0c
     938:	6d 87       	std	Y+13, r22	; 0x0d
     93a:	7e 87       	std	Y+14, r23	; 0x0e
     93c:	8f 87       	std	Y+15, r24	; 0x0f
     93e:	98 8b       	std	Y+16, r25	; 0x10
	return distance;
     940:	29 85       	ldd	r18, Y+9	; 0x09
     942:	3a 85       	ldd	r19, Y+10	; 0x0a
     944:	4b 85       	ldd	r20, Y+11	; 0x0b
     946:	5c 85       	ldd	r21, Y+12	; 0x0c
     948:	6d 85       	ldd	r22, Y+13	; 0x0d
     94a:	7e 85       	ldd	r23, Y+14	; 0x0e
     94c:	8f 85       	ldd	r24, Y+15	; 0x0f
     94e:	98 89       	ldd	r25, Y+16	; 0x10
}
     950:	61 96       	adiw	r28, 0x11	; 17
     952:	0f b6       	in	r0, 0x3f	; 63
     954:	f8 94       	cli
     956:	de bf       	out	0x3e, r29	; 62
     958:	0f be       	out	0x3f, r0	; 63
     95a:	cd bf       	out	0x3d, r28	; 61
     95c:	df 91       	pop	r29
     95e:	cf 91       	pop	r28
     960:	1f 91       	pop	r17
     962:	0f 91       	pop	r16
     964:	ff 90       	pop	r15
     966:	ef 90       	pop	r14
     968:	df 90       	pop	r13
     96a:	cf 90       	pop	r12
     96c:	bf 90       	pop	r11
     96e:	af 90       	pop	r10
     970:	08 95       	ret

00000972 <main>:
#include "MACROS.h"


int main(void)
{
	Ultrasonic_init();	// initialize the ultrasonics
     972:	0e 94 ef 03 	call	0x7de	; 0x7de <Ultrasonic_init>
	train2();			// train the robot
     976:	0e 94 d5 02 	call	0x5aa	; 0x5aa <train2>
	DDRB |= 1 << 5;     //starting the green LED
     97a:	84 b1       	in	r24, 0x04	; 4
     97c:	80 62       	ori	r24, 0x20	; 32
     97e:	84 b9       	out	0x04, r24	; 4
	PORTB |= 1 << 5;
     980:	85 b1       	in	r24, 0x05	; 5
     982:	80 62       	ori	r24, 0x20	; 32
     984:	85 b9       	out	0x05, r24	; 5
	test2();			// infinite loop anyway
     986:	0e 94 ab 03 	call	0x756	; 0x756 <test2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     98a:	2f ef       	ldi	r18, 0xFF	; 255
     98c:	83 ed       	ldi	r24, 0xD3	; 211
     98e:	90 e3       	ldi	r25, 0x30	; 48
     990:	21 50       	subi	r18, 0x01	; 1
     992:	80 40       	sbci	r24, 0x00	; 0
     994:	90 40       	sbci	r25, 0x00	; 0
     996:	e1 f7       	brne	.-8      	; 0x990 <main+0x1e>
     998:	00 c0       	rjmp	.+0      	; 0x99a <main+0x28>
     99a:	00 00       	nop
     99c:	ff cf       	rjmp	.-2      	; 0x99c <main+0x2a>

0000099e <__subsf3>:
     99e:	50 58       	subi	r21, 0x80	; 128

000009a0 <__addsf3>:
     9a0:	bb 27       	eor	r27, r27
     9a2:	aa 27       	eor	r26, r26
     9a4:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__addsf3x>
     9a8:	0c 94 61 06 	jmp	0xcc2	; 0xcc2 <__fp_round>
     9ac:	0e 94 53 06 	call	0xca6	; 0xca6 <__fp_pscA>
     9b0:	38 f0       	brcs	.+14     	; 0x9c0 <__addsf3+0x20>
     9b2:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <__fp_pscB>
     9b6:	20 f0       	brcs	.+8      	; 0x9c0 <__addsf3+0x20>
     9b8:	39 f4       	brne	.+14     	; 0x9c8 <__addsf3+0x28>
     9ba:	9f 3f       	cpi	r25, 0xFF	; 255
     9bc:	19 f4       	brne	.+6      	; 0x9c4 <__addsf3+0x24>
     9be:	26 f4       	brtc	.+8      	; 0x9c8 <__addsf3+0x28>
     9c0:	0c 94 50 06 	jmp	0xca0	; 0xca0 <__fp_nan>
     9c4:	0e f4       	brtc	.+2      	; 0x9c8 <__addsf3+0x28>
     9c6:	e0 95       	com	r30
     9c8:	e7 fb       	bst	r30, 7
     9ca:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_inf>

000009ce <__addsf3x>:
     9ce:	e9 2f       	mov	r30, r25
     9d0:	0e 94 72 06 	call	0xce4	; 0xce4 <__fp_split3>
     9d4:	58 f3       	brcs	.-42     	; 0x9ac <__addsf3+0xc>
     9d6:	ba 17       	cp	r27, r26
     9d8:	62 07       	cpc	r22, r18
     9da:	73 07       	cpc	r23, r19
     9dc:	84 07       	cpc	r24, r20
     9de:	95 07       	cpc	r25, r21
     9e0:	20 f0       	brcs	.+8      	; 0x9ea <__addsf3x+0x1c>
     9e2:	79 f4       	brne	.+30     	; 0xa02 <__addsf3x+0x34>
     9e4:	a6 f5       	brtc	.+104    	; 0xa4e <__addsf3x+0x80>
     9e6:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__fp_zero>
     9ea:	0e f4       	brtc	.+2      	; 0x9ee <__addsf3x+0x20>
     9ec:	e0 95       	com	r30
     9ee:	0b 2e       	mov	r0, r27
     9f0:	ba 2f       	mov	r27, r26
     9f2:	a0 2d       	mov	r26, r0
     9f4:	0b 01       	movw	r0, r22
     9f6:	b9 01       	movw	r22, r18
     9f8:	90 01       	movw	r18, r0
     9fa:	0c 01       	movw	r0, r24
     9fc:	ca 01       	movw	r24, r20
     9fe:	a0 01       	movw	r20, r0
     a00:	11 24       	eor	r1, r1
     a02:	ff 27       	eor	r31, r31
     a04:	59 1b       	sub	r21, r25
     a06:	99 f0       	breq	.+38     	; 0xa2e <__addsf3x+0x60>
     a08:	59 3f       	cpi	r21, 0xF9	; 249
     a0a:	50 f4       	brcc	.+20     	; 0xa20 <__addsf3x+0x52>
     a0c:	50 3e       	cpi	r21, 0xE0	; 224
     a0e:	68 f1       	brcs	.+90     	; 0xa6a <__addsf3x+0x9c>
     a10:	1a 16       	cp	r1, r26
     a12:	f0 40       	sbci	r31, 0x00	; 0
     a14:	a2 2f       	mov	r26, r18
     a16:	23 2f       	mov	r18, r19
     a18:	34 2f       	mov	r19, r20
     a1a:	44 27       	eor	r20, r20
     a1c:	58 5f       	subi	r21, 0xF8	; 248
     a1e:	f3 cf       	rjmp	.-26     	; 0xa06 <__addsf3x+0x38>
     a20:	46 95       	lsr	r20
     a22:	37 95       	ror	r19
     a24:	27 95       	ror	r18
     a26:	a7 95       	ror	r26
     a28:	f0 40       	sbci	r31, 0x00	; 0
     a2a:	53 95       	inc	r21
     a2c:	c9 f7       	brne	.-14     	; 0xa20 <__addsf3x+0x52>
     a2e:	7e f4       	brtc	.+30     	; 0xa4e <__addsf3x+0x80>
     a30:	1f 16       	cp	r1, r31
     a32:	ba 0b       	sbc	r27, r26
     a34:	62 0b       	sbc	r22, r18
     a36:	73 0b       	sbc	r23, r19
     a38:	84 0b       	sbc	r24, r20
     a3a:	ba f0       	brmi	.+46     	; 0xa6a <__addsf3x+0x9c>
     a3c:	91 50       	subi	r25, 0x01	; 1
     a3e:	a1 f0       	breq	.+40     	; 0xa68 <__addsf3x+0x9a>
     a40:	ff 0f       	add	r31, r31
     a42:	bb 1f       	adc	r27, r27
     a44:	66 1f       	adc	r22, r22
     a46:	77 1f       	adc	r23, r23
     a48:	88 1f       	adc	r24, r24
     a4a:	c2 f7       	brpl	.-16     	; 0xa3c <__addsf3x+0x6e>
     a4c:	0e c0       	rjmp	.+28     	; 0xa6a <__addsf3x+0x9c>
     a4e:	ba 0f       	add	r27, r26
     a50:	62 1f       	adc	r22, r18
     a52:	73 1f       	adc	r23, r19
     a54:	84 1f       	adc	r24, r20
     a56:	48 f4       	brcc	.+18     	; 0xa6a <__addsf3x+0x9c>
     a58:	87 95       	ror	r24
     a5a:	77 95       	ror	r23
     a5c:	67 95       	ror	r22
     a5e:	b7 95       	ror	r27
     a60:	f7 95       	ror	r31
     a62:	9e 3f       	cpi	r25, 0xFE	; 254
     a64:	08 f0       	brcs	.+2      	; 0xa68 <__addsf3x+0x9a>
     a66:	b0 cf       	rjmp	.-160    	; 0x9c8 <__addsf3+0x28>
     a68:	93 95       	inc	r25
     a6a:	88 0f       	add	r24, r24
     a6c:	08 f0       	brcs	.+2      	; 0xa70 <__addsf3x+0xa2>
     a6e:	99 27       	eor	r25, r25
     a70:	ee 0f       	add	r30, r30
     a72:	97 95       	ror	r25
     a74:	87 95       	ror	r24
     a76:	08 95       	ret

00000a78 <__cmpsf2>:
     a78:	0e 94 26 06 	call	0xc4c	; 0xc4c <__fp_cmp>
     a7c:	08 f4       	brcc	.+2      	; 0xa80 <__cmpsf2+0x8>
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	08 95       	ret

00000a82 <__divsf3>:
     a82:	0e 94 55 05 	call	0xaaa	; 0xaaa <__divsf3x>
     a86:	0c 94 61 06 	jmp	0xcc2	; 0xcc2 <__fp_round>
     a8a:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <__fp_pscB>
     a8e:	58 f0       	brcs	.+22     	; 0xaa6 <__divsf3+0x24>
     a90:	0e 94 53 06 	call	0xca6	; 0xca6 <__fp_pscA>
     a94:	40 f0       	brcs	.+16     	; 0xaa6 <__divsf3+0x24>
     a96:	29 f4       	brne	.+10     	; 0xaa2 <__divsf3+0x20>
     a98:	5f 3f       	cpi	r21, 0xFF	; 255
     a9a:	29 f0       	breq	.+10     	; 0xaa6 <__divsf3+0x24>
     a9c:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_inf>
     aa0:	51 11       	cpse	r21, r1
     aa2:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__fp_szero>
     aa6:	0c 94 50 06 	jmp	0xca0	; 0xca0 <__fp_nan>

00000aaa <__divsf3x>:
     aaa:	0e 94 72 06 	call	0xce4	; 0xce4 <__fp_split3>
     aae:	68 f3       	brcs	.-38     	; 0xa8a <__divsf3+0x8>

00000ab0 <__divsf3_pse>:
     ab0:	99 23       	and	r25, r25
     ab2:	b1 f3       	breq	.-20     	; 0xaa0 <__divsf3+0x1e>
     ab4:	55 23       	and	r21, r21
     ab6:	91 f3       	breq	.-28     	; 0xa9c <__divsf3+0x1a>
     ab8:	95 1b       	sub	r25, r21
     aba:	55 0b       	sbc	r21, r21
     abc:	bb 27       	eor	r27, r27
     abe:	aa 27       	eor	r26, r26
     ac0:	62 17       	cp	r22, r18
     ac2:	73 07       	cpc	r23, r19
     ac4:	84 07       	cpc	r24, r20
     ac6:	38 f0       	brcs	.+14     	; 0xad6 <__divsf3_pse+0x26>
     ac8:	9f 5f       	subi	r25, 0xFF	; 255
     aca:	5f 4f       	sbci	r21, 0xFF	; 255
     acc:	22 0f       	add	r18, r18
     ace:	33 1f       	adc	r19, r19
     ad0:	44 1f       	adc	r20, r20
     ad2:	aa 1f       	adc	r26, r26
     ad4:	a9 f3       	breq	.-22     	; 0xac0 <__divsf3_pse+0x10>
     ad6:	35 d0       	rcall	.+106    	; 0xb42 <__divsf3_pse+0x92>
     ad8:	0e 2e       	mov	r0, r30
     ada:	3a f0       	brmi	.+14     	; 0xaea <__divsf3_pse+0x3a>
     adc:	e0 e8       	ldi	r30, 0x80	; 128
     ade:	32 d0       	rcall	.+100    	; 0xb44 <__divsf3_pse+0x94>
     ae0:	91 50       	subi	r25, 0x01	; 1
     ae2:	50 40       	sbci	r21, 0x00	; 0
     ae4:	e6 95       	lsr	r30
     ae6:	00 1c       	adc	r0, r0
     ae8:	ca f7       	brpl	.-14     	; 0xadc <__divsf3_pse+0x2c>
     aea:	2b d0       	rcall	.+86     	; 0xb42 <__divsf3_pse+0x92>
     aec:	fe 2f       	mov	r31, r30
     aee:	29 d0       	rcall	.+82     	; 0xb42 <__divsf3_pse+0x92>
     af0:	66 0f       	add	r22, r22
     af2:	77 1f       	adc	r23, r23
     af4:	88 1f       	adc	r24, r24
     af6:	bb 1f       	adc	r27, r27
     af8:	26 17       	cp	r18, r22
     afa:	37 07       	cpc	r19, r23
     afc:	48 07       	cpc	r20, r24
     afe:	ab 07       	cpc	r26, r27
     b00:	b0 e8       	ldi	r27, 0x80	; 128
     b02:	09 f0       	breq	.+2      	; 0xb06 <__divsf3_pse+0x56>
     b04:	bb 0b       	sbc	r27, r27
     b06:	80 2d       	mov	r24, r0
     b08:	bf 01       	movw	r22, r30
     b0a:	ff 27       	eor	r31, r31
     b0c:	93 58       	subi	r25, 0x83	; 131
     b0e:	5f 4f       	sbci	r21, 0xFF	; 255
     b10:	3a f0       	brmi	.+14     	; 0xb20 <__divsf3_pse+0x70>
     b12:	9e 3f       	cpi	r25, 0xFE	; 254
     b14:	51 05       	cpc	r21, r1
     b16:	78 f0       	brcs	.+30     	; 0xb36 <__divsf3_pse+0x86>
     b18:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_inf>
     b1c:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__fp_szero>
     b20:	5f 3f       	cpi	r21, 0xFF	; 255
     b22:	e4 f3       	brlt	.-8      	; 0xb1c <__divsf3_pse+0x6c>
     b24:	98 3e       	cpi	r25, 0xE8	; 232
     b26:	d4 f3       	brlt	.-12     	; 0xb1c <__divsf3_pse+0x6c>
     b28:	86 95       	lsr	r24
     b2a:	77 95       	ror	r23
     b2c:	67 95       	ror	r22
     b2e:	b7 95       	ror	r27
     b30:	f7 95       	ror	r31
     b32:	9f 5f       	subi	r25, 0xFF	; 255
     b34:	c9 f7       	brne	.-14     	; 0xb28 <__divsf3_pse+0x78>
     b36:	88 0f       	add	r24, r24
     b38:	91 1d       	adc	r25, r1
     b3a:	96 95       	lsr	r25
     b3c:	87 95       	ror	r24
     b3e:	97 f9       	bld	r25, 7
     b40:	08 95       	ret
     b42:	e1 e0       	ldi	r30, 0x01	; 1
     b44:	66 0f       	add	r22, r22
     b46:	77 1f       	adc	r23, r23
     b48:	88 1f       	adc	r24, r24
     b4a:	bb 1f       	adc	r27, r27
     b4c:	62 17       	cp	r22, r18
     b4e:	73 07       	cpc	r23, r19
     b50:	84 07       	cpc	r24, r20
     b52:	ba 07       	cpc	r27, r26
     b54:	20 f0       	brcs	.+8      	; 0xb5e <__divsf3_pse+0xae>
     b56:	62 1b       	sub	r22, r18
     b58:	73 0b       	sbc	r23, r19
     b5a:	84 0b       	sbc	r24, r20
     b5c:	ba 0b       	sbc	r27, r26
     b5e:	ee 1f       	adc	r30, r30
     b60:	88 f7       	brcc	.-30     	; 0xb44 <__divsf3_pse+0x94>
     b62:	e0 95       	com	r30
     b64:	08 95       	ret

00000b66 <__fixsfsi>:
     b66:	0e 94 ba 05 	call	0xb74	; 0xb74 <__fixunssfsi>
     b6a:	68 94       	set
     b6c:	b1 11       	cpse	r27, r1
     b6e:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__fp_szero>
     b72:	08 95       	ret

00000b74 <__fixunssfsi>:
     b74:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__fp_splitA>
     b78:	88 f0       	brcs	.+34     	; 0xb9c <__fixunssfsi+0x28>
     b7a:	9f 57       	subi	r25, 0x7F	; 127
     b7c:	98 f0       	brcs	.+38     	; 0xba4 <__fixunssfsi+0x30>
     b7e:	b9 2f       	mov	r27, r25
     b80:	99 27       	eor	r25, r25
     b82:	b7 51       	subi	r27, 0x17	; 23
     b84:	b0 f0       	brcs	.+44     	; 0xbb2 <__fixunssfsi+0x3e>
     b86:	e1 f0       	breq	.+56     	; 0xbc0 <__fixunssfsi+0x4c>
     b88:	66 0f       	add	r22, r22
     b8a:	77 1f       	adc	r23, r23
     b8c:	88 1f       	adc	r24, r24
     b8e:	99 1f       	adc	r25, r25
     b90:	1a f0       	brmi	.+6      	; 0xb98 <__fixunssfsi+0x24>
     b92:	ba 95       	dec	r27
     b94:	c9 f7       	brne	.-14     	; 0xb88 <__fixunssfsi+0x14>
     b96:	14 c0       	rjmp	.+40     	; 0xbc0 <__fixunssfsi+0x4c>
     b98:	b1 30       	cpi	r27, 0x01	; 1
     b9a:	91 f0       	breq	.+36     	; 0xbc0 <__fixunssfsi+0x4c>
     b9c:	0e 94 94 06 	call	0xd28	; 0xd28 <__fp_zero>
     ba0:	b1 e0       	ldi	r27, 0x01	; 1
     ba2:	08 95       	ret
     ba4:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__fp_zero>
     ba8:	67 2f       	mov	r22, r23
     baa:	78 2f       	mov	r23, r24
     bac:	88 27       	eor	r24, r24
     bae:	b8 5f       	subi	r27, 0xF8	; 248
     bb0:	39 f0       	breq	.+14     	; 0xbc0 <__fixunssfsi+0x4c>
     bb2:	b9 3f       	cpi	r27, 0xF9	; 249
     bb4:	cc f3       	brlt	.-14     	; 0xba8 <__fixunssfsi+0x34>
     bb6:	86 95       	lsr	r24
     bb8:	77 95       	ror	r23
     bba:	67 95       	ror	r22
     bbc:	b3 95       	inc	r27
     bbe:	d9 f7       	brne	.-10     	; 0xbb6 <__fixunssfsi+0x42>
     bc0:	3e f4       	brtc	.+14     	; 0xbd0 <__fixunssfsi+0x5c>
     bc2:	90 95       	com	r25
     bc4:	80 95       	com	r24
     bc6:	70 95       	com	r23
     bc8:	61 95       	neg	r22
     bca:	7f 4f       	sbci	r23, 0xFF	; 255
     bcc:	8f 4f       	sbci	r24, 0xFF	; 255
     bce:	9f 4f       	sbci	r25, 0xFF	; 255
     bd0:	08 95       	ret

00000bd2 <__floatunsisf>:
     bd2:	e8 94       	clt
     bd4:	09 c0       	rjmp	.+18     	; 0xbe8 <__floatsisf+0x12>

00000bd6 <__floatsisf>:
     bd6:	97 fb       	bst	r25, 7
     bd8:	3e f4       	brtc	.+14     	; 0xbe8 <__floatsisf+0x12>
     bda:	90 95       	com	r25
     bdc:	80 95       	com	r24
     bde:	70 95       	com	r23
     be0:	61 95       	neg	r22
     be2:	7f 4f       	sbci	r23, 0xFF	; 255
     be4:	8f 4f       	sbci	r24, 0xFF	; 255
     be6:	9f 4f       	sbci	r25, 0xFF	; 255
     be8:	99 23       	and	r25, r25
     bea:	a9 f0       	breq	.+42     	; 0xc16 <__floatsisf+0x40>
     bec:	f9 2f       	mov	r31, r25
     bee:	96 e9       	ldi	r25, 0x96	; 150
     bf0:	bb 27       	eor	r27, r27
     bf2:	93 95       	inc	r25
     bf4:	f6 95       	lsr	r31
     bf6:	87 95       	ror	r24
     bf8:	77 95       	ror	r23
     bfa:	67 95       	ror	r22
     bfc:	b7 95       	ror	r27
     bfe:	f1 11       	cpse	r31, r1
     c00:	f8 cf       	rjmp	.-16     	; 0xbf2 <__floatsisf+0x1c>
     c02:	fa f4       	brpl	.+62     	; 0xc42 <__floatsisf+0x6c>
     c04:	bb 0f       	add	r27, r27
     c06:	11 f4       	brne	.+4      	; 0xc0c <__floatsisf+0x36>
     c08:	60 ff       	sbrs	r22, 0
     c0a:	1b c0       	rjmp	.+54     	; 0xc42 <__floatsisf+0x6c>
     c0c:	6f 5f       	subi	r22, 0xFF	; 255
     c0e:	7f 4f       	sbci	r23, 0xFF	; 255
     c10:	8f 4f       	sbci	r24, 0xFF	; 255
     c12:	9f 4f       	sbci	r25, 0xFF	; 255
     c14:	16 c0       	rjmp	.+44     	; 0xc42 <__floatsisf+0x6c>
     c16:	88 23       	and	r24, r24
     c18:	11 f0       	breq	.+4      	; 0xc1e <__floatsisf+0x48>
     c1a:	96 e9       	ldi	r25, 0x96	; 150
     c1c:	11 c0       	rjmp	.+34     	; 0xc40 <__floatsisf+0x6a>
     c1e:	77 23       	and	r23, r23
     c20:	21 f0       	breq	.+8      	; 0xc2a <__floatsisf+0x54>
     c22:	9e e8       	ldi	r25, 0x8E	; 142
     c24:	87 2f       	mov	r24, r23
     c26:	76 2f       	mov	r23, r22
     c28:	05 c0       	rjmp	.+10     	; 0xc34 <__floatsisf+0x5e>
     c2a:	66 23       	and	r22, r22
     c2c:	71 f0       	breq	.+28     	; 0xc4a <__floatsisf+0x74>
     c2e:	96 e8       	ldi	r25, 0x86	; 134
     c30:	86 2f       	mov	r24, r22
     c32:	70 e0       	ldi	r23, 0x00	; 0
     c34:	60 e0       	ldi	r22, 0x00	; 0
     c36:	2a f0       	brmi	.+10     	; 0xc42 <__floatsisf+0x6c>
     c38:	9a 95       	dec	r25
     c3a:	66 0f       	add	r22, r22
     c3c:	77 1f       	adc	r23, r23
     c3e:	88 1f       	adc	r24, r24
     c40:	da f7       	brpl	.-10     	; 0xc38 <__floatsisf+0x62>
     c42:	88 0f       	add	r24, r24
     c44:	96 95       	lsr	r25
     c46:	87 95       	ror	r24
     c48:	97 f9       	bld	r25, 7
     c4a:	08 95       	ret

00000c4c <__fp_cmp>:
     c4c:	99 0f       	add	r25, r25
     c4e:	00 08       	sbc	r0, r0
     c50:	55 0f       	add	r21, r21
     c52:	aa 0b       	sbc	r26, r26
     c54:	e0 e8       	ldi	r30, 0x80	; 128
     c56:	fe ef       	ldi	r31, 0xFE	; 254
     c58:	16 16       	cp	r1, r22
     c5a:	17 06       	cpc	r1, r23
     c5c:	e8 07       	cpc	r30, r24
     c5e:	f9 07       	cpc	r31, r25
     c60:	c0 f0       	brcs	.+48     	; 0xc92 <__fp_cmp+0x46>
     c62:	12 16       	cp	r1, r18
     c64:	13 06       	cpc	r1, r19
     c66:	e4 07       	cpc	r30, r20
     c68:	f5 07       	cpc	r31, r21
     c6a:	98 f0       	brcs	.+38     	; 0xc92 <__fp_cmp+0x46>
     c6c:	62 1b       	sub	r22, r18
     c6e:	73 0b       	sbc	r23, r19
     c70:	84 0b       	sbc	r24, r20
     c72:	95 0b       	sbc	r25, r21
     c74:	39 f4       	brne	.+14     	; 0xc84 <__fp_cmp+0x38>
     c76:	0a 26       	eor	r0, r26
     c78:	61 f0       	breq	.+24     	; 0xc92 <__fp_cmp+0x46>
     c7a:	23 2b       	or	r18, r19
     c7c:	24 2b       	or	r18, r20
     c7e:	25 2b       	or	r18, r21
     c80:	21 f4       	brne	.+8      	; 0xc8a <__fp_cmp+0x3e>
     c82:	08 95       	ret
     c84:	0a 26       	eor	r0, r26
     c86:	09 f4       	brne	.+2      	; 0xc8a <__fp_cmp+0x3e>
     c88:	a1 40       	sbci	r26, 0x01	; 1
     c8a:	a6 95       	lsr	r26
     c8c:	8f ef       	ldi	r24, 0xFF	; 255
     c8e:	81 1d       	adc	r24, r1
     c90:	81 1d       	adc	r24, r1
     c92:	08 95       	ret

00000c94 <__fp_inf>:
     c94:	97 f9       	bld	r25, 7
     c96:	9f 67       	ori	r25, 0x7F	; 127
     c98:	80 e8       	ldi	r24, 0x80	; 128
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	08 95       	ret

00000ca0 <__fp_nan>:
     ca0:	9f ef       	ldi	r25, 0xFF	; 255
     ca2:	80 ec       	ldi	r24, 0xC0	; 192
     ca4:	08 95       	ret

00000ca6 <__fp_pscA>:
     ca6:	00 24       	eor	r0, r0
     ca8:	0a 94       	dec	r0
     caa:	16 16       	cp	r1, r22
     cac:	17 06       	cpc	r1, r23
     cae:	18 06       	cpc	r1, r24
     cb0:	09 06       	cpc	r0, r25
     cb2:	08 95       	ret

00000cb4 <__fp_pscB>:
     cb4:	00 24       	eor	r0, r0
     cb6:	0a 94       	dec	r0
     cb8:	12 16       	cp	r1, r18
     cba:	13 06       	cpc	r1, r19
     cbc:	14 06       	cpc	r1, r20
     cbe:	05 06       	cpc	r0, r21
     cc0:	08 95       	ret

00000cc2 <__fp_round>:
     cc2:	09 2e       	mov	r0, r25
     cc4:	03 94       	inc	r0
     cc6:	00 0c       	add	r0, r0
     cc8:	11 f4       	brne	.+4      	; 0xcce <__fp_round+0xc>
     cca:	88 23       	and	r24, r24
     ccc:	52 f0       	brmi	.+20     	; 0xce2 <__fp_round+0x20>
     cce:	bb 0f       	add	r27, r27
     cd0:	40 f4       	brcc	.+16     	; 0xce2 <__fp_round+0x20>
     cd2:	bf 2b       	or	r27, r31
     cd4:	11 f4       	brne	.+4      	; 0xcda <__fp_round+0x18>
     cd6:	60 ff       	sbrs	r22, 0
     cd8:	04 c0       	rjmp	.+8      	; 0xce2 <__fp_round+0x20>
     cda:	6f 5f       	subi	r22, 0xFF	; 255
     cdc:	7f 4f       	sbci	r23, 0xFF	; 255
     cde:	8f 4f       	sbci	r24, 0xFF	; 255
     ce0:	9f 4f       	sbci	r25, 0xFF	; 255
     ce2:	08 95       	ret

00000ce4 <__fp_split3>:
     ce4:	57 fd       	sbrc	r21, 7
     ce6:	90 58       	subi	r25, 0x80	; 128
     ce8:	44 0f       	add	r20, r20
     cea:	55 1f       	adc	r21, r21
     cec:	59 f0       	breq	.+22     	; 0xd04 <__fp_splitA+0x10>
     cee:	5f 3f       	cpi	r21, 0xFF	; 255
     cf0:	71 f0       	breq	.+28     	; 0xd0e <__fp_splitA+0x1a>
     cf2:	47 95       	ror	r20

00000cf4 <__fp_splitA>:
     cf4:	88 0f       	add	r24, r24
     cf6:	97 fb       	bst	r25, 7
     cf8:	99 1f       	adc	r25, r25
     cfa:	61 f0       	breq	.+24     	; 0xd14 <__fp_splitA+0x20>
     cfc:	9f 3f       	cpi	r25, 0xFF	; 255
     cfe:	79 f0       	breq	.+30     	; 0xd1e <__fp_splitA+0x2a>
     d00:	87 95       	ror	r24
     d02:	08 95       	ret
     d04:	12 16       	cp	r1, r18
     d06:	13 06       	cpc	r1, r19
     d08:	14 06       	cpc	r1, r20
     d0a:	55 1f       	adc	r21, r21
     d0c:	f2 cf       	rjmp	.-28     	; 0xcf2 <__fp_split3+0xe>
     d0e:	46 95       	lsr	r20
     d10:	f1 df       	rcall	.-30     	; 0xcf4 <__fp_splitA>
     d12:	08 c0       	rjmp	.+16     	; 0xd24 <__fp_splitA+0x30>
     d14:	16 16       	cp	r1, r22
     d16:	17 06       	cpc	r1, r23
     d18:	18 06       	cpc	r1, r24
     d1a:	99 1f       	adc	r25, r25
     d1c:	f1 cf       	rjmp	.-30     	; 0xd00 <__fp_splitA+0xc>
     d1e:	86 95       	lsr	r24
     d20:	71 05       	cpc	r23, r1
     d22:	61 05       	cpc	r22, r1
     d24:	08 94       	sec
     d26:	08 95       	ret

00000d28 <__fp_zero>:
     d28:	e8 94       	clt

00000d2a <__fp_szero>:
     d2a:	bb 27       	eor	r27, r27
     d2c:	66 27       	eor	r22, r22
     d2e:	77 27       	eor	r23, r23
     d30:	cb 01       	movw	r24, r22
     d32:	97 f9       	bld	r25, 7
     d34:	08 95       	ret

00000d36 <__gesf2>:
     d36:	0e 94 26 06 	call	0xc4c	; 0xc4c <__fp_cmp>
     d3a:	08 f4       	brcc	.+2      	; 0xd3e <__gesf2+0x8>
     d3c:	8f ef       	ldi	r24, 0xFF	; 255
     d3e:	08 95       	ret

00000d40 <__mulsf3>:
     d40:	0e 94 b3 06 	call	0xd66	; 0xd66 <__mulsf3x>
     d44:	0c 94 61 06 	jmp	0xcc2	; 0xcc2 <__fp_round>
     d48:	0e 94 53 06 	call	0xca6	; 0xca6 <__fp_pscA>
     d4c:	38 f0       	brcs	.+14     	; 0xd5c <__mulsf3+0x1c>
     d4e:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <__fp_pscB>
     d52:	20 f0       	brcs	.+8      	; 0xd5c <__mulsf3+0x1c>
     d54:	95 23       	and	r25, r21
     d56:	11 f0       	breq	.+4      	; 0xd5c <__mulsf3+0x1c>
     d58:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_inf>
     d5c:	0c 94 50 06 	jmp	0xca0	; 0xca0 <__fp_nan>
     d60:	11 24       	eor	r1, r1
     d62:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__fp_szero>

00000d66 <__mulsf3x>:
     d66:	0e 94 72 06 	call	0xce4	; 0xce4 <__fp_split3>
     d6a:	70 f3       	brcs	.-36     	; 0xd48 <__mulsf3+0x8>

00000d6c <__mulsf3_pse>:
     d6c:	95 9f       	mul	r25, r21
     d6e:	c1 f3       	breq	.-16     	; 0xd60 <__mulsf3+0x20>
     d70:	95 0f       	add	r25, r21
     d72:	50 e0       	ldi	r21, 0x00	; 0
     d74:	55 1f       	adc	r21, r21
     d76:	62 9f       	mul	r22, r18
     d78:	f0 01       	movw	r30, r0
     d7a:	72 9f       	mul	r23, r18
     d7c:	bb 27       	eor	r27, r27
     d7e:	f0 0d       	add	r31, r0
     d80:	b1 1d       	adc	r27, r1
     d82:	63 9f       	mul	r22, r19
     d84:	aa 27       	eor	r26, r26
     d86:	f0 0d       	add	r31, r0
     d88:	b1 1d       	adc	r27, r1
     d8a:	aa 1f       	adc	r26, r26
     d8c:	64 9f       	mul	r22, r20
     d8e:	66 27       	eor	r22, r22
     d90:	b0 0d       	add	r27, r0
     d92:	a1 1d       	adc	r26, r1
     d94:	66 1f       	adc	r22, r22
     d96:	82 9f       	mul	r24, r18
     d98:	22 27       	eor	r18, r18
     d9a:	b0 0d       	add	r27, r0
     d9c:	a1 1d       	adc	r26, r1
     d9e:	62 1f       	adc	r22, r18
     da0:	73 9f       	mul	r23, r19
     da2:	b0 0d       	add	r27, r0
     da4:	a1 1d       	adc	r26, r1
     da6:	62 1f       	adc	r22, r18
     da8:	83 9f       	mul	r24, r19
     daa:	a0 0d       	add	r26, r0
     dac:	61 1d       	adc	r22, r1
     dae:	22 1f       	adc	r18, r18
     db0:	74 9f       	mul	r23, r20
     db2:	33 27       	eor	r19, r19
     db4:	a0 0d       	add	r26, r0
     db6:	61 1d       	adc	r22, r1
     db8:	23 1f       	adc	r18, r19
     dba:	84 9f       	mul	r24, r20
     dbc:	60 0d       	add	r22, r0
     dbe:	21 1d       	adc	r18, r1
     dc0:	82 2f       	mov	r24, r18
     dc2:	76 2f       	mov	r23, r22
     dc4:	6a 2f       	mov	r22, r26
     dc6:	11 24       	eor	r1, r1
     dc8:	9f 57       	subi	r25, 0x7F	; 127
     dca:	50 40       	sbci	r21, 0x00	; 0
     dcc:	9a f0       	brmi	.+38     	; 0xdf4 <__mulsf3_pse+0x88>
     dce:	f1 f0       	breq	.+60     	; 0xe0c <__mulsf3_pse+0xa0>
     dd0:	88 23       	and	r24, r24
     dd2:	4a f0       	brmi	.+18     	; 0xde6 <__mulsf3_pse+0x7a>
     dd4:	ee 0f       	add	r30, r30
     dd6:	ff 1f       	adc	r31, r31
     dd8:	bb 1f       	adc	r27, r27
     dda:	66 1f       	adc	r22, r22
     ddc:	77 1f       	adc	r23, r23
     dde:	88 1f       	adc	r24, r24
     de0:	91 50       	subi	r25, 0x01	; 1
     de2:	50 40       	sbci	r21, 0x00	; 0
     de4:	a9 f7       	brne	.-22     	; 0xdd0 <__mulsf3_pse+0x64>
     de6:	9e 3f       	cpi	r25, 0xFE	; 254
     de8:	51 05       	cpc	r21, r1
     dea:	80 f0       	brcs	.+32     	; 0xe0c <__mulsf3_pse+0xa0>
     dec:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__fp_inf>
     df0:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__fp_szero>
     df4:	5f 3f       	cpi	r21, 0xFF	; 255
     df6:	e4 f3       	brlt	.-8      	; 0xdf0 <__mulsf3_pse+0x84>
     df8:	98 3e       	cpi	r25, 0xE8	; 232
     dfa:	d4 f3       	brlt	.-12     	; 0xdf0 <__mulsf3_pse+0x84>
     dfc:	86 95       	lsr	r24
     dfe:	77 95       	ror	r23
     e00:	67 95       	ror	r22
     e02:	b7 95       	ror	r27
     e04:	f7 95       	ror	r31
     e06:	e7 95       	ror	r30
     e08:	9f 5f       	subi	r25, 0xFF	; 255
     e0a:	c1 f7       	brne	.-16     	; 0xdfc <__mulsf3_pse+0x90>
     e0c:	fe 2b       	or	r31, r30
     e0e:	88 0f       	add	r24, r24
     e10:	91 1d       	adc	r25, r1
     e12:	96 95       	lsr	r25
     e14:	87 95       	ror	r24
     e16:	97 f9       	bld	r25, 7
     e18:	08 95       	ret

00000e1a <__divmodhi4>:
     e1a:	97 fb       	bst	r25, 7
     e1c:	07 2e       	mov	r0, r23
     e1e:	16 f4       	brtc	.+4      	; 0xe24 <__divmodhi4+0xa>
     e20:	00 94       	com	r0
     e22:	07 d0       	rcall	.+14     	; 0xe32 <__divmodhi4_neg1>
     e24:	77 fd       	sbrc	r23, 7
     e26:	09 d0       	rcall	.+18     	; 0xe3a <__divmodhi4_neg2>
     e28:	0e 94 8c 07 	call	0xf18	; 0xf18 <__udivmodhi4>
     e2c:	07 fc       	sbrc	r0, 7
     e2e:	05 d0       	rcall	.+10     	; 0xe3a <__divmodhi4_neg2>
     e30:	3e f4       	brtc	.+14     	; 0xe40 <__divmodhi4_exit>

00000e32 <__divmodhi4_neg1>:
     e32:	90 95       	com	r25
     e34:	81 95       	neg	r24
     e36:	9f 4f       	sbci	r25, 0xFF	; 255
     e38:	08 95       	ret

00000e3a <__divmodhi4_neg2>:
     e3a:	70 95       	com	r23
     e3c:	61 95       	neg	r22
     e3e:	7f 4f       	sbci	r23, 0xFF	; 255

00000e40 <__divmodhi4_exit>:
     e40:	08 95       	ret

00000e42 <__umoddi3>:
     e42:	68 94       	set
     e44:	01 c0       	rjmp	.+2      	; 0xe48 <__udivdi3_umoddi3>

00000e46 <__udivdi3>:
     e46:	e8 94       	clt

00000e48 <__udivdi3_umoddi3>:
     e48:	8f 92       	push	r8
     e4a:	9f 92       	push	r9
     e4c:	cf 93       	push	r28
     e4e:	df 93       	push	r29
     e50:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__udivmod64>
     e54:	df 91       	pop	r29
     e56:	cf 91       	pop	r28
     e58:	9f 90       	pop	r9
     e5a:	8f 90       	pop	r8
     e5c:	08 95       	ret

00000e5e <__udivmod64>:
     e5e:	88 24       	eor	r8, r8
     e60:	99 24       	eor	r9, r9
     e62:	f4 01       	movw	r30, r8
     e64:	e4 01       	movw	r28, r8
     e66:	b0 e4       	ldi	r27, 0x40	; 64
     e68:	9f 93       	push	r25
     e6a:	aa 27       	eor	r26, r26
     e6c:	9a 15       	cp	r25, r10
     e6e:	8b 04       	cpc	r8, r11
     e70:	9c 04       	cpc	r9, r12
     e72:	ed 05       	cpc	r30, r13
     e74:	fe 05       	cpc	r31, r14
     e76:	cf 05       	cpc	r28, r15
     e78:	d0 07       	cpc	r29, r16
     e7a:	a1 07       	cpc	r26, r17
     e7c:	98 f4       	brcc	.+38     	; 0xea4 <__udivmod64+0x46>
     e7e:	ad 2f       	mov	r26, r29
     e80:	dc 2f       	mov	r29, r28
     e82:	cf 2f       	mov	r28, r31
     e84:	fe 2f       	mov	r31, r30
     e86:	e9 2d       	mov	r30, r9
     e88:	98 2c       	mov	r9, r8
     e8a:	89 2e       	mov	r8, r25
     e8c:	98 2f       	mov	r25, r24
     e8e:	87 2f       	mov	r24, r23
     e90:	76 2f       	mov	r23, r22
     e92:	65 2f       	mov	r22, r21
     e94:	54 2f       	mov	r21, r20
     e96:	43 2f       	mov	r20, r19
     e98:	32 2f       	mov	r19, r18
     e9a:	22 27       	eor	r18, r18
     e9c:	b8 50       	subi	r27, 0x08	; 8
     e9e:	31 f7       	brne	.-52     	; 0xe6c <__udivmod64+0xe>
     ea0:	bf 91       	pop	r27
     ea2:	27 c0       	rjmp	.+78     	; 0xef2 <__udivmod64+0x94>
     ea4:	1b 2e       	mov	r1, r27
     ea6:	bf 91       	pop	r27
     ea8:	bb 27       	eor	r27, r27
     eaa:	22 0f       	add	r18, r18
     eac:	33 1f       	adc	r19, r19
     eae:	44 1f       	adc	r20, r20
     eb0:	55 1f       	adc	r21, r21
     eb2:	66 1f       	adc	r22, r22
     eb4:	77 1f       	adc	r23, r23
     eb6:	88 1f       	adc	r24, r24
     eb8:	99 1f       	adc	r25, r25
     eba:	88 1c       	adc	r8, r8
     ebc:	99 1c       	adc	r9, r9
     ebe:	ee 1f       	adc	r30, r30
     ec0:	ff 1f       	adc	r31, r31
     ec2:	cc 1f       	adc	r28, r28
     ec4:	dd 1f       	adc	r29, r29
     ec6:	aa 1f       	adc	r26, r26
     ec8:	bb 1f       	adc	r27, r27
     eca:	8a 14       	cp	r8, r10
     ecc:	9b 04       	cpc	r9, r11
     ece:	ec 05       	cpc	r30, r12
     ed0:	fd 05       	cpc	r31, r13
     ed2:	ce 05       	cpc	r28, r14
     ed4:	df 05       	cpc	r29, r15
     ed6:	a0 07       	cpc	r26, r16
     ed8:	b1 07       	cpc	r27, r17
     eda:	48 f0       	brcs	.+18     	; 0xeee <__udivmod64+0x90>
     edc:	8a 18       	sub	r8, r10
     ede:	9b 08       	sbc	r9, r11
     ee0:	ec 09       	sbc	r30, r12
     ee2:	fd 09       	sbc	r31, r13
     ee4:	ce 09       	sbc	r28, r14
     ee6:	df 09       	sbc	r29, r15
     ee8:	a0 0b       	sbc	r26, r16
     eea:	b1 0b       	sbc	r27, r17
     eec:	21 60       	ori	r18, 0x01	; 1
     eee:	1a 94       	dec	r1
     ef0:	e1 f6       	brne	.-72     	; 0xeaa <__udivmod64+0x4c>
     ef2:	2e f4       	brtc	.+10     	; 0xefe <__udivmod64+0xa0>
     ef4:	94 01       	movw	r18, r8
     ef6:	af 01       	movw	r20, r30
     ef8:	be 01       	movw	r22, r28
     efa:	cd 01       	movw	r24, r26
     efc:	00 0c       	add	r0, r0
     efe:	08 95       	ret

00000f00 <__adddi3_s8>:
     f00:	00 24       	eor	r0, r0
     f02:	a7 fd       	sbrc	r26, 7
     f04:	00 94       	com	r0
     f06:	2a 0f       	add	r18, r26
     f08:	30 1d       	adc	r19, r0
     f0a:	40 1d       	adc	r20, r0
     f0c:	50 1d       	adc	r21, r0
     f0e:	60 1d       	adc	r22, r0
     f10:	70 1d       	adc	r23, r0
     f12:	80 1d       	adc	r24, r0
     f14:	90 1d       	adc	r25, r0
     f16:	08 95       	ret

00000f18 <__udivmodhi4>:
     f18:	aa 1b       	sub	r26, r26
     f1a:	bb 1b       	sub	r27, r27
     f1c:	51 e1       	ldi	r21, 0x11	; 17
     f1e:	07 c0       	rjmp	.+14     	; 0xf2e <__udivmodhi4_ep>

00000f20 <__udivmodhi4_loop>:
     f20:	aa 1f       	adc	r26, r26
     f22:	bb 1f       	adc	r27, r27
     f24:	a6 17       	cp	r26, r22
     f26:	b7 07       	cpc	r27, r23
     f28:	10 f0       	brcs	.+4      	; 0xf2e <__udivmodhi4_ep>
     f2a:	a6 1b       	sub	r26, r22
     f2c:	b7 0b       	sbc	r27, r23

00000f2e <__udivmodhi4_ep>:
     f2e:	88 1f       	adc	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	5a 95       	dec	r21
     f34:	a9 f7       	brne	.-22     	; 0xf20 <__udivmodhi4_loop>
     f36:	80 95       	com	r24
     f38:	90 95       	com	r25
     f3a:	bc 01       	movw	r22, r24
     f3c:	cd 01       	movw	r24, r26
     f3e:	08 95       	ret

00000f40 <do_rand>:
     f40:	8f 92       	push	r8
     f42:	9f 92       	push	r9
     f44:	af 92       	push	r10
     f46:	bf 92       	push	r11
     f48:	cf 92       	push	r12
     f4a:	df 92       	push	r13
     f4c:	ef 92       	push	r14
     f4e:	ff 92       	push	r15
     f50:	cf 93       	push	r28
     f52:	df 93       	push	r29
     f54:	ec 01       	movw	r28, r24
     f56:	68 81       	ld	r22, Y
     f58:	79 81       	ldd	r23, Y+1	; 0x01
     f5a:	8a 81       	ldd	r24, Y+2	; 0x02
     f5c:	9b 81       	ldd	r25, Y+3	; 0x03
     f5e:	61 15       	cp	r22, r1
     f60:	71 05       	cpc	r23, r1
     f62:	81 05       	cpc	r24, r1
     f64:	91 05       	cpc	r25, r1
     f66:	21 f4       	brne	.+8      	; 0xf70 <do_rand+0x30>
     f68:	64 e2       	ldi	r22, 0x24	; 36
     f6a:	79 ed       	ldi	r23, 0xD9	; 217
     f6c:	8b e5       	ldi	r24, 0x5B	; 91
     f6e:	97 e0       	ldi	r25, 0x07	; 7
     f70:	2d e1       	ldi	r18, 0x1D	; 29
     f72:	33 ef       	ldi	r19, 0xF3	; 243
     f74:	41 e0       	ldi	r20, 0x01	; 1
     f76:	50 e0       	ldi	r21, 0x00	; 0
     f78:	0e 94 fc 07 	call	0xff8	; 0xff8 <__divmodsi4>
     f7c:	49 01       	movw	r8, r18
     f7e:	5a 01       	movw	r10, r20
     f80:	9b 01       	movw	r18, r22
     f82:	ac 01       	movw	r20, r24
     f84:	a7 ea       	ldi	r26, 0xA7	; 167
     f86:	b1 e4       	ldi	r27, 0x41	; 65
     f88:	0e 94 1b 08 	call	0x1036	; 0x1036 <__muluhisi3>
     f8c:	6b 01       	movw	r12, r22
     f8e:	7c 01       	movw	r14, r24
     f90:	ac ee       	ldi	r26, 0xEC	; 236
     f92:	b4 ef       	ldi	r27, 0xF4	; 244
     f94:	a5 01       	movw	r20, r10
     f96:	94 01       	movw	r18, r8
     f98:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulohisi3>
     f9c:	dc 01       	movw	r26, r24
     f9e:	cb 01       	movw	r24, r22
     fa0:	8c 0d       	add	r24, r12
     fa2:	9d 1d       	adc	r25, r13
     fa4:	ae 1d       	adc	r26, r14
     fa6:	bf 1d       	adc	r27, r15
     fa8:	b7 ff       	sbrs	r27, 7
     faa:	03 c0       	rjmp	.+6      	; 0xfb2 <do_rand+0x72>
     fac:	01 97       	sbiw	r24, 0x01	; 1
     fae:	a1 09       	sbc	r26, r1
     fb0:	b0 48       	sbci	r27, 0x80	; 128
     fb2:	88 83       	st	Y, r24
     fb4:	99 83       	std	Y+1, r25	; 0x01
     fb6:	aa 83       	std	Y+2, r26	; 0x02
     fb8:	bb 83       	std	Y+3, r27	; 0x03
     fba:	9f 77       	andi	r25, 0x7F	; 127
     fbc:	df 91       	pop	r29
     fbe:	cf 91       	pop	r28
     fc0:	ff 90       	pop	r15
     fc2:	ef 90       	pop	r14
     fc4:	df 90       	pop	r13
     fc6:	cf 90       	pop	r12
     fc8:	bf 90       	pop	r11
     fca:	af 90       	pop	r10
     fcc:	9f 90       	pop	r9
     fce:	8f 90       	pop	r8
     fd0:	08 95       	ret

00000fd2 <rand_r>:
     fd2:	0e 94 a0 07 	call	0xf40	; 0xf40 <do_rand>
     fd6:	08 95       	ret

00000fd8 <rand>:
     fd8:	80 e0       	ldi	r24, 0x00	; 0
     fda:	91 e0       	ldi	r25, 0x01	; 1
     fdc:	0e 94 a0 07 	call	0xf40	; 0xf40 <do_rand>
     fe0:	08 95       	ret

00000fe2 <srand>:
     fe2:	a0 e0       	ldi	r26, 0x00	; 0
     fe4:	b0 e0       	ldi	r27, 0x00	; 0
     fe6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     fea:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     fee:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     ff2:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     ff6:	08 95       	ret

00000ff8 <__divmodsi4>:
     ff8:	05 2e       	mov	r0, r21
     ffa:	97 fb       	bst	r25, 7
     ffc:	1e f4       	brtc	.+6      	; 0x1004 <__divmodsi4+0xc>
     ffe:	00 94       	com	r0
    1000:	0e 94 13 08 	call	0x1026	; 0x1026 <__negsi2>
    1004:	57 fd       	sbrc	r21, 7
    1006:	07 d0       	rcall	.+14     	; 0x1016 <__divmodsi4_neg2>
    1008:	0e 94 2e 08 	call	0x105c	; 0x105c <__udivmodsi4>
    100c:	07 fc       	sbrc	r0, 7
    100e:	03 d0       	rcall	.+6      	; 0x1016 <__divmodsi4_neg2>
    1010:	4e f4       	brtc	.+18     	; 0x1024 <__divmodsi4_exit>
    1012:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__negsi2>

00001016 <__divmodsi4_neg2>:
    1016:	50 95       	com	r21
    1018:	40 95       	com	r20
    101a:	30 95       	com	r19
    101c:	21 95       	neg	r18
    101e:	3f 4f       	sbci	r19, 0xFF	; 255
    1020:	4f 4f       	sbci	r20, 0xFF	; 255
    1022:	5f 4f       	sbci	r21, 0xFF	; 255

00001024 <__divmodsi4_exit>:
    1024:	08 95       	ret

00001026 <__negsi2>:
    1026:	90 95       	com	r25
    1028:	80 95       	com	r24
    102a:	70 95       	com	r23
    102c:	61 95       	neg	r22
    102e:	7f 4f       	sbci	r23, 0xFF	; 255
    1030:	8f 4f       	sbci	r24, 0xFF	; 255
    1032:	9f 4f       	sbci	r25, 0xFF	; 255
    1034:	08 95       	ret

00001036 <__muluhisi3>:
    1036:	0e 94 50 08 	call	0x10a0	; 0x10a0 <__umulhisi3>
    103a:	a5 9f       	mul	r26, r21
    103c:	90 0d       	add	r25, r0
    103e:	b4 9f       	mul	r27, r20
    1040:	90 0d       	add	r25, r0
    1042:	a4 9f       	mul	r26, r20
    1044:	80 0d       	add	r24, r0
    1046:	91 1d       	adc	r25, r1
    1048:	11 24       	eor	r1, r1
    104a:	08 95       	ret

0000104c <__mulshisi3>:
    104c:	b7 ff       	sbrs	r27, 7
    104e:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__muluhisi3>

00001052 <__mulohisi3>:
    1052:	0e 94 1b 08 	call	0x1036	; 0x1036 <__muluhisi3>
    1056:	82 1b       	sub	r24, r18
    1058:	93 0b       	sbc	r25, r19
    105a:	08 95       	ret

0000105c <__udivmodsi4>:
    105c:	a1 e2       	ldi	r26, 0x21	; 33
    105e:	1a 2e       	mov	r1, r26
    1060:	aa 1b       	sub	r26, r26
    1062:	bb 1b       	sub	r27, r27
    1064:	fd 01       	movw	r30, r26
    1066:	0d c0       	rjmp	.+26     	; 0x1082 <__udivmodsi4_ep>

00001068 <__udivmodsi4_loop>:
    1068:	aa 1f       	adc	r26, r26
    106a:	bb 1f       	adc	r27, r27
    106c:	ee 1f       	adc	r30, r30
    106e:	ff 1f       	adc	r31, r31
    1070:	a2 17       	cp	r26, r18
    1072:	b3 07       	cpc	r27, r19
    1074:	e4 07       	cpc	r30, r20
    1076:	f5 07       	cpc	r31, r21
    1078:	20 f0       	brcs	.+8      	; 0x1082 <__udivmodsi4_ep>
    107a:	a2 1b       	sub	r26, r18
    107c:	b3 0b       	sbc	r27, r19
    107e:	e4 0b       	sbc	r30, r20
    1080:	f5 0b       	sbc	r31, r21

00001082 <__udivmodsi4_ep>:
    1082:	66 1f       	adc	r22, r22
    1084:	77 1f       	adc	r23, r23
    1086:	88 1f       	adc	r24, r24
    1088:	99 1f       	adc	r25, r25
    108a:	1a 94       	dec	r1
    108c:	69 f7       	brne	.-38     	; 0x1068 <__udivmodsi4_loop>
    108e:	60 95       	com	r22
    1090:	70 95       	com	r23
    1092:	80 95       	com	r24
    1094:	90 95       	com	r25
    1096:	9b 01       	movw	r18, r22
    1098:	ac 01       	movw	r20, r24
    109a:	bd 01       	movw	r22, r26
    109c:	cf 01       	movw	r24, r30
    109e:	08 95       	ret

000010a0 <__umulhisi3>:
    10a0:	a2 9f       	mul	r26, r18
    10a2:	b0 01       	movw	r22, r0
    10a4:	b3 9f       	mul	r27, r19
    10a6:	c0 01       	movw	r24, r0
    10a8:	a3 9f       	mul	r26, r19
    10aa:	70 0d       	add	r23, r0
    10ac:	81 1d       	adc	r24, r1
    10ae:	11 24       	eor	r1, r1
    10b0:	91 1d       	adc	r25, r1
    10b2:	b2 9f       	mul	r27, r18
    10b4:	70 0d       	add	r23, r0
    10b6:	81 1d       	adc	r24, r1
    10b8:	11 24       	eor	r1, r1
    10ba:	91 1d       	adc	r25, r1
    10bc:	08 95       	ret

000010be <_exit>:
    10be:	f8 94       	cli

000010c0 <__stop_program>:
    10c0:	ff cf       	rjmp	.-2      	; 0x10c0 <__stop_program>
